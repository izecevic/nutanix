{"status":{},"spec":{"description":"","resources":{"client_attrs":{"90fd8c42_deployment_cloned_0":{"y":-1315.5552119003,"x":110.3512922826},"None":{"y":200,"x":680},"90fd8c42_deployment":{"y":-1010.1120561967,"x":-260.9559717404},"9b5477e5_deployment":{"y":-1067.25,"x":-836.375},"57a67137_deployment":{"y":-1245.9131097793,"x":-623.3713063778}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"reserveIP"},{"kind":"app_task","name":"getIP"}],"name":"91bc0111_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"reserveIP"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"getIP"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"reserveIP","attrs":{"script":"#script\n\nbase_url = \"https:\/\/@@{INFOBLOX_IP}@@\/wapi\/v2.4\/record:host?_return_fields%2B=name,ipv4addrs&_return_as_object=1\"\nuser = \"@@{infoblox.username}@@\"\npassword = \"@@{infoblox.secret}@@\"\nheaders = {'Accept': 'application\/json', 'Content-Type': 'application\/json; charset=UTF-8'}\nvmName = [\"@@{AD.NODE1_NAME}@@\",\"@@{AD.NODE2_NAME}@@\",\"@@{WSFC_NAME}@@\",\"@@{SQLCLUSTER_NAME}@@\"]\n\nif \"@@{VLAN}@@\" == \"54\":\n    network=\"10.68.99.0\/24\"\nelif \"@@{VLAN}@@\" == \"55\":\n    network=\"10.48.104.0\/22\"\nelif \"@@{VLAN}@@\" == \"56\":\n    network=\"10.68.99.0\/24\"\nelse:\n    print \"Error: unknown vlan\"\n    exit(1)\n\ndef process_request(url, method, user, password, headers, payload=None):\n    if (payload != None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth=\"BASIC\", user=user, passwd=password, params=payload, verify=False, headers=headers)\n    return r\n\n\nreservation_payload = {}\nreservation_payload['ipv4addrs'] = []\nreservation_payload['ipv4addrs'] = [{\"ipv4addr\":\"func:nextavailableip:\"+network}]\npayload = json.dumps(reservation_payload)\nprint \"Payload: \" + payload\nfor host in vmName:\n    reservation_payload['name'] = host + \".@@{domain}@@\"\n    print reservation_payload\n    r = process_request(base_url, 'POST', user, password, headers, reservation_payload)\n    result = json.loads(r.content)\n    ip = result['result']['ipv4addrs'][0]['ipv4addr']\n    print ip\n    \n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getIP","attrs":{"exit_status":[],"script":"#script\n\nget_base_url = \"https:\/\/@@{INFOBLOX_IP}@@\/wapi\/v2.4\/record:host?name=\"\nuser = \"@@{infoblox.username}@@\"\npassword = \"@@{infoblox.secret}@@\"\nheaders = {'Accept': 'application\/json', 'Content-Type': 'application\/json; charset=UTF-8'}\nvmName = [\"@@{AD.NODE1_NAME}@@\",\"@@{AD.NODE2_NAME}@@\"]\ni = 1\n\n\ndef process_request(url, method, user, password, headers, payload=None):\n    if (payload != None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth=\"BASIC\", user=user, passwd=password, params=payload, verify=False, headers=headers)\n    return r\n\nfor host in vmName:\n    base_url = get_base_url + host.lower() + \".@@{domain}@@\"\n    print base_url\n    r = process_request(base_url, 'GET', user, password, headers)\n    result = json.loads(r.content)\n    print result\n    print result[0]['ipv4addrs'][0]['ipv4addr']\n    print \"NODE\"+str(i)+\"_IP=\",result[0]['ipv4addrs'][0]['ipv4addr']\n    i += 1\n    \n\n#### set WSFC IP\nbase_url = get_base_url + \"@@{WSFC_NAME}@@.@@{domain}@@\"\nr = process_request(base_url, 'GET', user, password, headers)\nresult = json.loads(r.content)\nprint result\nprint result[0]['ipv4addrs'][0]['ipv4addr']\nprint \"WSFC_IP=\",result[0]['ipv4addrs'][0]['ipv4addr']\n##### set SQL Server cluster IP\nbase_url = get_base_url + \"@@{SQLCLUSTER_NAME}@@.@@{domain}@@\"\nr = process_request(base_url, 'GET', user, password, headers)\nresult = json.loads(r.content)\nprint result\nprint result[0]['ipv4addrs'][0]['ipv4addr']\nprint \"SQLCLUSTER_IP=\",result[0]['ipv4addrs'][0]['ipv4addr']\n\n\n\n\n\n","eval_variables":["NODE1_IP","NODE2_IP","WSFC_IP","SQLCLUSTER_IP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"601937f8_runbook","main_task_local_reference":{"kind":"app_task","name":"91bc0111_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"e8e9cefe_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"cb48f9ab_runbook","main_task_local_reference":{"kind":"app_task","name":"e8e9cefe_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ebf1adf7_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"cd19ae57_runbook","main_task_local_reference":{"kind":"app_task","name":"ebf1adf7_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"b726ce07_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"576a9fba_runbook","main_task_local_reference":{"kind":"app_task","name":"b726ce07_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"0bb5aa04_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"42dc365a_runbook","main_task_local_reference":{"kind":"app_task","name":"0bb5aa04_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"AD"}],"name":"PreDeployment","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","description":"","name":"NODE1_IP","type":"LOCAL","value":"","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"NODE2_IP","type":"LOCAL","value":"","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"WSFC_IP","type":"LOCAL","value":"","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"SQLCLUSTER_IP","type":"LOCAL","value":"","label":"","attrs":{"type":""}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"ConfigureWSFC"},{"kind":"app_task","name":"EnableSqlAlwaysOn"}],"name":"eb5ff15f_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"ConfigureWSFC"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"EnableSqlAlwaysOn"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ConfigureWSFC","attrs":{"exit_status":[],"script":"echo \"Creating Windows Failover Cluster @@{WSFC_NAME}@@\"\n\n$clusterComputerObj = \"@@{WSFC_NAME}@@\"  + \"$\"\n$node1ComputerObj = \"@@{AD.NODE1_NAME}@@\" + \"$\"\n$node2ComputerObj = \"@@{AD.NODE2_NAME}@@\" + \"$\"\n$filesharewitness = \"@@{FILESHAREWITNESS}@@@@{WSFC_NAME}@@\"\n#echo $clusterComputerObj,$node1ComputerObj,$node2ComputerObj,$filesharewitness\n#echo \"CN=@@{WSFC_NAME}@@,@@{OU}@@\"\n$createCluster = @'\nImport-Module failoverclusters\n$clusterComputerObj = \"@@{WSFC_NAME}@@\"  + \"$\"\n$filesharewitness = \"@@{FILESHAREWITNESS}@@@@{WSFC_NAME}@@\"\nNew-Cluster -Name \"CN=@@{WSFC_NAME}@@,@@{OU}@@\" -Node \"@@{AD.NODE1_NAME}@@\",\"@@{AD.NODE2_NAME}@@\" -StaticAddress \"@@{PreDeployment.WSFC_IP}@@\" -NoStorage\nNew-Item -Path $filesharewitness -ItemType Container\n$acl = Get-Acl $filesharewitness\n$AccessRule = New-Object System.Security.AccessControl.FileSystemAccessRule($clusterComputerObj,\"FullControl\",\"ContainerInherit, ObjectInherit\", \"None\", \"Allow\")\n$acl.SetAccessRule($AccessRule)\n$acl | Set-Acl $filesharewitness\nSet-ClusterQuorum \u2013NodeAndFileShareMajority $filesharewitness\n'@\necho $createCluster | Out-File -FilePath 'C:\\Windows\\Temp\\createCluster.ps1'\n\n$taskAction = New-ScheduledTaskAction -Execute 'C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe' -Argument 'C:\\Windows\\Temp\\createCluster.ps1'\n$trigger =  New-ScheduledTaskTrigger -Once -At (Get-Date).AddSeconds(5)\nRegister-ScheduledTask -Action $taskAction -Trigger $trigger -TaskName cluster -Description \"Create Cluster\" -User \"@@{cluster_install.username}@@\" -Password \"@@{cluster_install.secret}@@\"\n\nStart-Sleep -s 60\n\necho \"Done!\"\n\n\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"EnableSqlAlwaysOn","attrs":{"exit_status":[],"script":"Start-Sleep -s 60\necho \"Enabling SqlAlwaysOn on @@{AD.NODE1_NAME}@@\"\nEnable-SqlAlwaysOn -ServerInstance @@{AD.NODE1_NAME}@@ -Force\nexit 0","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"640b08c6_runbook","main_task_local_reference":{"kind":"app_task","name":"eb5ff15f_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8dfac917_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"b923eb9b_runbook","main_task_local_reference":{"kind":"app_task","name":"8dfac917_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8ad63878_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"c534d285_runbook","main_task_local_reference":{"kind":"app_task","name":"8ad63878_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7fb27f16_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f80358a0_runbook","main_task_local_reference":{"kind":"app_task","name":"7fb27f16_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ae8c08d1_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"571ed53e_runbook","main_task_local_reference":{"kind":"app_task","name":"ae8c08d1_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"PreDeployment"}],"name":"Node1","port_list":[],"tier":"","variable_list":[],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ff2034ee_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"00503453_runbook","main_task_local_reference":{"kind":"app_task","name":"ff2034ee_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"5fb36a19_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"77c13cc0_runbook","main_task_local_reference":{"kind":"app_task","name":"5fb36a19_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"04973567_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"429f95b5_runbook","main_task_local_reference":{"kind":"app_task","name":"04973567_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"65e11670_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"6b77cf7a_runbook","main_task_local_reference":{"kind":"app_task","name":"65e11670_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"39065179_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"696898ab_runbook","main_task_local_reference":{"kind":"app_task","name":"39065179_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"AD","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","description":"","name":"NODE1_NAME","type":"LOCAL","value":"","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"HOST_COUNT","type":"LOCAL","value":"2","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"NODE2_NAME","type":"LOCAL","value":"","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"REQUESTER","type":"LOCAL","value":"","label":"","attrs":{"type":""}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"PrepareCluster"}],"name":"eb5ff15f_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"PrepareCluster","attrs":{"type":"CALL_RUNBOOK","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"5fe9c00c_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"640b08c6_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"eb5ff15f_dag_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8dfac917_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"b923eb9b_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"8dfac917_dag_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"SendNotification"}],"name":"8ad63878_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"SendNotification","attrs":{"exit_status":[],"script":"$From = \"Calm Marketplace <Calm@tinkerbell.local>\" # need to change this\n$To = \"sgassim@nutanix.com\" # should use @@{calm_username}@@\n\n\n$Subject = \"Your application @@{calm_application_name}@@ is ready!\"\n$Body = '<p>Hello @@{AD.REQUESTER}@@,<\/p>\n<p>You have requested application @@{calm_application_name}@@ from the Marketplace, we have successfully deployed your application and you can start using it using the following informations:<\/br>\nService type: MS SQL Server 2016 Cluster AlwaysOn<\/br>\nNode 1 ip address: @@{PreDeployment.NODE1_IP}@@<\/br>\nNode 1 name: @@{AD.NODE1_NAME}@@<\/br>\nNode 2 ip address: @@{PreDeployment.NODE2_IP}@@<\/br>\nNode 2 name: @@{AD.NODE1_NAME}@@<\/br>\nWSFC cluster VIP : @@{PreDeployment.WSFC_IP}@@<\/br>\nSQL server cluster VIP : @@{PreDeployment.SQLCLUSTER_IP}@@<\/br>\nSQL server cluster name: @@{SQLCLUSTER_NAME}@@<\/br>\nLogin: your Active Directory username<\/br>\nPassword: your Active Directory password<\/br>\nFor security reasons, please do not share your password with anyone.<\/br>\nRegards,<\/br>\n<p>The Cloud Team<\/p>'\n$SMTPServer = \"@@{SMTP_SERVER}@@\"\n$SMTPPort = \"25\"\nSend-MailMessage -From $From -to $To -Subject $Subject -BodyAsHtml $Body -SmtpServer $SMTPServer -port $SMTPPort\nif($?) {\n  Write-Host \"[*] Notification successfuly sent\"\n}else { Write-Host \"[*] Unable to send email notification!\" }","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"c534d285_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"8ad63878_dag_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7fb27f16_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f80358a0_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"7fb27f16_dag_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ae8c08d1_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"571ed53e_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"ae8c08d1_dag_cloned_1"},"variable_list":[]},"name":"action_restart"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"CreateUserDB"},{"kind":"app_task","name":"BackupUserDB"},{"kind":"app_task","name":"EnableSqlAlwaysOn"},{"kind":"app_task","name":"CreateAG"}],"name":"a2251888_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"CreateUserDB"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"BackupUserDB"}},{"from_task_reference":{"kind":"app_task","name":"BackupUserDB"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"EnableSqlAlwaysOn"}},{"from_task_reference":{"kind":"app_task","name":"EnableSqlAlwaysOn"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CreateAG"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CreateUserDB","attrs":{"exit_status":[],"script":"$createDB = @\"\n\nCREATE DATABASE [@@{calm_application_name}@@]\n CONTAINMENT = NONE\n ON  PRIMARY \n( NAME = N'@@{calm_application_name}@@', FILENAME = N'H:\\DATA$([char]92)@@{calm_application_name}@@.mdf' , SIZE = 8192KB , FILEGROWTH = 65536KB )\n LOG ON \n( NAME = N'@@{calm_application_name}@@_log', FILENAME = N'H:\\DATA$([char]92)@@{calm_application_name}@@_log.ldf' , SIZE = 8192KB , FILEGROWTH = 65536KB )\nGO\nALTER DATABASE [@@{calm_application_name}@@] SET COMPATIBILITY_LEVEL = 130\nGO\nALTER DATABASE [@@{calm_application_name}@@] SET ANSI_NULL_DEFAULT OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET ANSI_NULLS OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET ANSI_PADDING OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET ANSI_WARNINGS OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET ARITHABORT OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET AUTO_CLOSE OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET AUTO_SHRINK OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF)\nGO\nALTER DATABASE [@@{calm_application_name}@@] SET AUTO_UPDATE_STATISTICS ON \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET CURSOR_CLOSE_ON_COMMIT OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET CURSOR_DEFAULT  GLOBAL \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET CONCAT_NULL_YIELDS_NULL OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET NUMERIC_ROUNDABORT OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET QUOTED_IDENTIFIER OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET RECURSIVE_TRIGGERS OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET  DISABLE_BROKER \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET AUTO_UPDATE_STATISTICS_ASYNC OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET DATE_CORRELATION_OPTIMIZATION OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET PARAMETERIZATION SIMPLE \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET READ_COMMITTED_SNAPSHOT OFF \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET  READ_WRITE \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET RECOVERY FULL \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET  MULTI_USER \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET PAGE_VERIFY CHECKSUM  \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET TARGET_RECOVERY_TIME = 60 SECONDS \nGO\nALTER DATABASE [@@{calm_application_name}@@] SET DELAYED_DURABILITY = DISABLED \nGO\nUSE [@@{calm_application_name}@@]\nGO\nALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = Off;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = Primary;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = On;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = Primary;\nGO\nALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = Off;\nGO\nALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = Primary;\nGO\nUSE [@@{calm_application_name}@@]\nGO\nIF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [@@{calm_application_name}@@] MODIFY FILEGROUP [PRIMARY] DEFAULT\nGO\n\"@\n\necho $createDB | Out-File -FilePath \"C:\\windows\\temp\\createDB.txt\"\n\n$result = Start-Process -FilePath \"C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn\\sqlcmd.exe\" -ArgumentList \"-U sa -P @@{sa.secret}@@ -i C:\\windows\\Temp\\createDB.txt -o C:\\windows\\Temp\\result_createDB.txt\" -NoNewWindow -Wait -PassThru\n\nif($result.ExitCode -eq 0) {\n echo \"Database created successfully, for troubleshooting, see C:\\windows\\Temp\\result_createDB.txt\"\n }","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"BackupUserDB","attrs":{"exit_status":[],"script":"$backupDB = @\"\nBACKUP DATABASE [@@{calm_application_name}@@] TO  DISK = N'F:\\SQLINSTALL\\MSSQL13.MSSQLSERVER\\MSSQL\\Backup$([char]92)@@{calm_application_name}@@.bak' WITH NOFORMAT, NOINIT,  NAME = N'@@{calm_application_name}@@-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10\nGO\n\"@\n#echo $backupDB\necho $backupDB | Out-File -FilePath \"c:\\windows\\temp\\\\backupDB.txt\"\n\n$result = Start-Process -FilePath \"C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn\\sqlcmd.exe\" -ArgumentList \"-U sa -P @@{sa.secret}@@ -i c:\\windows\\temp\\\\backupDB.txt -o C:\\windows\\Temp\\result_backupDB.txt\" -NoNewWindow -Wait -PassThru\n\nif($result.ExitCode -eq 0) {\n echo \"Database backup successfully terminated, for troubleshooting, see C:\\windows\\Temp\\result_backupDB.txt\"\n }\nStart-Sleep -s 5","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"EnableSqlAlwaysOn","attrs":{"exit_status":[],"script":"echo \"Enabling SqlAlwaysOn on @@{AD.NODE2_NAME}@@\"\nEnable-SqlAlwaysOn -ServerInstance @@{AD.NODE2_NAME}@@ -Force\nexit 0\n\n\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CreateAG","attrs":{"exit_status":[],"script":"$createAG = @'\n:Connect @@{AD.NODE2_NAME}@@\n\nIF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0\nBEGIN\n\tALTER ENDPOINT [Hadr_endpoint] STATE = STARTED\nEND\n\n\nGO\n\nuse [master]\n\nGO\n\nGRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [@@{cluster_install.username}@@]\n\nGO\n\n:Connect @@{AD.NODE2_NAME}@@\n\nIF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')\nBEGIN\n  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);\nEND\nIF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')\nBEGIN\n  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;\nEND\n\nGO\n\n:Connect @@{AD.NODE1_NAME}@@ -U sa -P @@{sa.secret}@@\n\nUSE [master]\n\nGO\n\nCREATE ENDPOINT [Hadr_endpoint] \n\tAS TCP (LISTENER_PORT = 5022)\n\tFOR DATA_MIRRORING (ROLE = ALL, ENCRYPTION = REQUIRED ALGORITHM AES)\n\nGO\n\nIF (SELECT state FROM sys.endpoints WHERE name = N'Hadr_endpoint') <> 0\nBEGIN\n\tALTER ENDPOINT [Hadr_endpoint] STATE = STARTED\nEND\n\n\nGO\n\nuse [master]\n\nGO\n\nGRANT CONNECT ON ENDPOINT::[Hadr_endpoint] TO [@@{cluster_install.username}@@]\n\nGO\n\n:Connect @@{AD.NODE1_NAME}@@ -U sa -P @@{sa.secret}@@\n\nIF EXISTS(SELECT * FROM sys.server_event_sessions WHERE name='AlwaysOn_health')\nBEGIN\n  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER WITH (STARTUP_STATE=ON);\nEND\nIF NOT EXISTS(SELECT * FROM sys.dm_xe_sessions WHERE name='AlwaysOn_health')\nBEGIN\n  ALTER EVENT SESSION [AlwaysOn_health] ON SERVER STATE=START;\nEND\n\nGO\n\n:Connect @@{AD.NODE2_NAME}@@\n\nUSE [master]\n\nGO\n\nCREATE AVAILABILITY GROUP [@@{calm_application_name}@@AAG]\nWITH (AUTOMATED_BACKUP_PREFERENCE = SECONDARY,\nDB_FAILOVER = OFF,\nDTC_SUPPORT = NONE)\nFOR DATABASE [@@{calm_application_name}@@]\nREPLICA ON N'@@{AD.NODE1_NAME}@@' WITH (ENDPOINT_URL = N'TCP:\/\/@@{AD.NODE1_NAME}@@.workshop.local:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO)),\n\tN'@@{AD.NODE2_NAME}@@' WITH (ENDPOINT_URL = N'TCP:\/\/@@{AD.NODE2_NAME}@@.workshop.local:5022', FAILOVER_MODE = MANUAL, AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT, BACKUP_PRIORITY = 50, SEEDING_MODE = AUTOMATIC, SECONDARY_ROLE(ALLOW_CONNECTIONS = NO));\n\nGO\n\n:Connect @@{AD.NODE2_NAME}@@\n\nUSE [master]\n\nGO\n\nALTER AVAILABILITY GROUP [@@{calm_application_name}@@AAG]\nADD LISTENER N'@@{calm_application_name}@@lsnt' (\nWITH IP\n((N'@@{PreDeployment.SQLCLUSTER_IP}@@', N'255.255.255.0')\n)\n, PORT=1433);\n\nGO\n\n:Connect @@{AD.NODE1_NAME}@@ -U sa -P @@{sa.secret}@@\n\nALTER AVAILABILITY GROUP [ag_group] JOIN;\n\nGO\n\nALTER AVAILABILITY GROUP [ag_group] GRANT CREATE ANY DATABASE;\n\nGO\n\nGO\n\n'@\n\necho $createAG | Out-File -FilePath \"c:\\windows\\temp\\CreateAG.txt\"\n\n\n$result = Start-Process -FilePath \"C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn\\sqlcmd.exe\" -ArgumentList \"-U sa -P @@{sa.secret}@@ -i c:\\windows\\temp\\CreateAG.txt -o C:\\windows\\Temp\\result_CreateAG.txt\" -NoNewWindow -Wait -PassThru\n\nif($result.ExitCode -eq 0) {\n echo \"SQL AlwaysOn Availability Group successfully created, for troubleshooting, see C:\\windows\\Temp\\result_CreateAG.txt\"\n }\n \n \n \n \n \n \n \n ","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"5fe9c00c_runbook","main_task_local_reference":{"kind":"app_task","name":"a2251888_dag"},"variable_list":[]},"name":"PrepareCluster"}],"depends_on_list":[{"kind":"app_service","name":"Node1"}],"name":"Node2","port_list":[],"tier":"","variable_list":[],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"EXISTING_VM","name":"PreDeploy","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":true,"address":"@@{ip_address}@@","delay_secs":"0","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"pc"}},"os_type":"Linux","create_spec":{"type":"PROVISION_EXISTING_MACHINE","address":"10.68.97.150"},"variable_list":[]},{"description":"","action_list":[],"type":"AHV_VM","name":"WindowsStd","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":5985,"login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"editables":{"create_spec":{"resources":{"nic_list":{},"disk_list":{"3":{"disk_size_mib":true},"2":{"disk_size_mib":true},"5":{"disk_size_mib":true},"4":{"disk_size_mib":true},"6":{"disk_size_mib":true}},"num_sockets":true,"memory_size_mib":true,"serial_port_list":{}}}},"os_type":"Windows","create_spec":{"name":"@@{AD.NODE1_NAME}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"330fe6ff-aede-46da-8d34-485a719949dd"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":6144,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"install_type":"PREPARED","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n  <settings pass=\"specialize\">\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <ComputerName>@@{AD.NODE1_NAME}@@<\/ComputerName>\n        <RegisteredOrganization>MoE<\/RegisteredOrganization>\n        <RegisteredOwner>MoE<\/RegisteredOwner>\n        <TimeZone>Pacific Standard Time<\/TimeZone>\n     <\/component>\n\t <component name=\"Microsoft-Windows-TCPIP\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\"\n\t\t\txmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\"\n\t\t\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n\t\t\t<Interfaces>\n\t\t\t\t<Interface wcm:action=\"add\">\n\t\t\t\t\t<Identifier>Ethernet<\/Identifier>\n\t\t\t\t\t<Ipv4Settings>\n\t\t\t\t\t\t<DhcpEnabled>false<\/DhcpEnabled>\n\t\t\t\t\t\t<RouterDiscoveryEnabled>true<\/RouterDiscoveryEnabled>\n\t\t\t\t\t\t<Metric>30<\/Metric>\n\t\t\t\t\t<\/Ipv4Settings>\n\t\t\t\t\t<UnicastIpAddresses>\n\t\t\t\t\t\t<IpAddress wcm:action=\"add\" wcm:keyValue=\"1\">@@{PreDeployment.NODE1_IP}@@\/24<\/IpAddress>\n\t\t\t\t\t<\/UnicastIpAddresses>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route wcm:action=\"add\">\n\t\t\t\t\t\t\t<Identifier>10<\/Identifier>\n\t\t\t\t\t\t\t<Metric>20<\/Metric>\n\t\t\t\t\t\t\t<NextHopAddress>@@{GATEWAY}@@<\/NextHopAddress>\n\t\t\t\t\t\t\t<Prefix>0.0.0.0\/0<\/Prefix>\n\t\t\t\t\t\t<\/Route>\n\t\t\t\t\t<\/Routes>\n\t\t\t\t<\/Interface>\n\t\t\t<\/Interfaces>\n\t\t<\/component>\n\t\t<component name=\"Microsoft-Windows-DNS-Client\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\"\n\t\t\txmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\"\n\t\t\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n\t\t\t<Interfaces>\n\t\t\t\t<Interface wcm:action=\"add\">\n\t\t\t\t\t<DNSServerSearchOrder>\n\t\t\t\t\t\t<IpAddress wcm:action=\"add\" wcm:keyValue=\"1\">@@{DNS_SERVER}@@<\/IpAddress>\n\t\t\t\t\t<\/DNSServerSearchOrder>\n\t\t\t\t\t<Identifier>Ethernet<\/Identifier>\n\t\t\t\t\t<EnableAdapterDomainNameRegistration>true<\/EnableAdapterDomainNameRegistration>\n\t\t\t\t\t<DisableDynamicUpdate>false<\/DisableDynamicUpdate>\n\t\t\t\t\t<DNSDomain>workshop.local<\/DNSDomain>\n\t\t\t\t<\/Interface>\n\t\t\t<\/Interfaces>\n\t\t\t<DNSDomain>@@{domain}@@<\/DNSDomain>\n\t\t\t<UseDomainNameDevolution>true<\/UseDomainNameDevolution>\n\t\t<\/component>\n     <component xmlns=\"\" name=\"Microsoft-Windows-TerminalServices-LocalSessionManager\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" processorArchitecture=\"amd64\">\n        <fDenyTSConnections>false<\/fDenyTSConnections>\n     <\/component>\n     <component xmlns=\"\" name=\"Microsoft-Windows-TerminalServices-RDP-WinStationExtensions\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" processorArchitecture=\"amd64\">\n        <UserAuthentication>0<\/UserAuthentication>\n     <\/component>\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Networking-MPSSVC-Svc\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <FirewallGroups>\n           <FirewallGroup wcm:action=\"add\" wcm:keyValue=\"RemoteDesktop\">\n              <Active>true<\/Active>\n              <Profile>all<\/Profile>\n              <Group>@FirewallAPI.dll,-28752<\/Group>\n           <\/FirewallGroup>\n        <\/FirewallGroups>\n     <\/component>\n  <\/settings>\n  <settings pass=\"oobeSystem\">\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <UserAccounts>\n           <AdministratorPassword>\n              <Value>@@{windows_local.secret}@@<\/Value>\n              <PlainText>true<\/PlainText>\n           <\/AdministratorPassword>\n        <\/UserAccounts>\n        <AutoLogon>\n           <Password>\n              <Value>@@{windows_local.secret}@@<\/Value>\n              <PlainText>true<\/PlainText>\n           <\/Password>\n           <Enabled>true<\/Enabled>\n           <Username>Administrator<\/Username>\n        <\/AutoLogon>\n        <FirstLogonCommands>\n           <SynchronousCommand wcm:action=\"add\">\n              <CommandLine>cmd.exe \/c netsh firewall add portopening TCP 5985 \"Port 5985\"<\/CommandLine>\n              <Description>Win RM port open<\/Description>\n              <Order>1<\/Order>\n              <RequiresUserInput>true<\/RequiresUserInput>\n           <\/SynchronousCommand>\n           <SynchronousCommand wcm:action=\"add\">\n              <CommandLine>powershell -Command \"Enable-PSRemoting -SkipNetworkProfileCheck -Force\"<\/CommandLine>\n              <Description>Enable PS-Remoting<\/Description>\n              <Order>2<\/Order>\n              <RequiresUserInput>true<\/RequiresUserInput>\n           <\/SynchronousCommand>\n           <SynchronousCommand wcm:action=\"add\">\n              <CommandLine>powershell -Command \"Set-ExecutionPolicy -ExecutionPolicy RemoteSigned\"<\/CommandLine>\n              <Description>Enable Remote-Signing<\/Description>\n              <Order>3<\/Order>\n              <RequiresUserInput>false<\/RequiresUserInput>\n           <\/SynchronousCommand>\n        <\/FirstLogonCommands>\n        <OOBE>\n           <HideEULAPage>true<\/HideEULAPage>\n           <SkipMachineOOBE>true<\/SkipMachineOOBE>\n        <\/OOBE>\n     <\/component>\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <InputLocale>en-US<\/InputLocale>\n        <SystemLocale>en-US<\/SystemLocale>\n        <UILanguageFallback>en-us<\/UILanguageFallback>\n        <UILanguage>en-US<\/UILanguage>\n           <UserLocale>en-US<\/UserLocale>\n     <\/component>\n  <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"CALM_MoE_Template","uuid":"a327cc9d-e387-4e72-8503-6672d3046558"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":{"kind":"image","type":"","name":"MSSQLServer2016-SP2","uuid":"10db3569-35a8-47a3-b79d-9cfcc319b99b"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":1,"adapter_type":"IDE"},"device_type":"CDROM"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":2,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":3,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":4,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":5,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":6,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]},{"description":"","action_list":[],"type":"EXISTING_VM","name":"ActiveDirectory","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","disable_readiness_probe":true,"address":"@@{ip_address}@@","delay_secs":"60","connection_port":5985,"login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"os_type":"Windows","create_spec":{"type":"PROVISION_EXISTING_MACHINE","address":"@@{AD_IP}@@"},"variable_list":[]},{"description":"","action_list":[],"type":"AHV_VM","name":"WindowsStd2","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":5985,"login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"editables":{"create_spec":{"resources":{"nic_list":{},"disk_list":{"3":{"disk_size_mib":true},"2":{"disk_size_mib":true},"5":{"disk_size_mib":true},"4":{"disk_size_mib":true},"6":{"disk_size_mib":true}},"num_sockets":true,"memory_size_mib":true,"serial_port_list":{}}}},"os_type":"Windows","create_spec":{"name":"@@{AD.NODE2_NAME}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"330fe6ff-aede-46da-8d34-485a719949dd"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":6144,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"install_type":"PREPARED","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n  <settings pass=\"specialize\">\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <ComputerName>@@{AD.NODE2_NAME}@@<\/ComputerName>\n        <RegisteredOrganization>MoE<\/RegisteredOrganization>\n        <RegisteredOwner>MoE<\/RegisteredOwner>\n        <TimeZone>Pacific Standard Time<\/TimeZone>\n     <\/component>\n\t <component name=\"Microsoft-Windows-TCPIP\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\"\n\t\t\txmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\"\n\t\t\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n\t\t\t<Interfaces>\n\t\t\t\t<Interface wcm:action=\"add\">\n\t\t\t\t\t<Identifier>Ethernet<\/Identifier>\n\t\t\t\t\t<Ipv4Settings>\n\t\t\t\t\t\t<DhcpEnabled>false<\/DhcpEnabled>\n\t\t\t\t\t\t<RouterDiscoveryEnabled>true<\/RouterDiscoveryEnabled>\n\t\t\t\t\t\t<Metric>30<\/Metric>\n\t\t\t\t\t<\/Ipv4Settings>\n\t\t\t\t\t<UnicastIpAddresses>\n\t\t\t\t\t\t<IpAddress wcm:action=\"add\" wcm:keyValue=\"1\">@@{PreDeployment.NODE2_IP}@@\/24<\/IpAddress>\n\t\t\t\t\t<\/UnicastIpAddresses>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route wcm:action=\"add\">\n\t\t\t\t\t\t\t<Identifier>10<\/Identifier>\n\t\t\t\t\t\t\t<Metric>20<\/Metric>\n\t\t\t\t\t\t\t<NextHopAddress>@@{GATEWAY}@@<\/NextHopAddress>\n\t\t\t\t\t\t\t<Prefix>0.0.0.0\/0<\/Prefix>\n\t\t\t\t\t\t<\/Route>\n\t\t\t\t\t<\/Routes>\n\t\t\t\t<\/Interface>\n\t\t\t<\/Interfaces>\n\t\t<\/component>\n\t\t<component name=\"Microsoft-Windows-DNS-Client\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\"\n\t\t\txmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\"\n\t\t\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\">\n\t\t\t<Interfaces>\n\t\t\t\t<Interface wcm:action=\"add\">\n\t\t\t\t\t<DNSServerSearchOrder>\n\t\t\t\t\t\t<IpAddress wcm:action=\"add\" wcm:keyValue=\"1\">@@{DNS_SERVER}@@<\/IpAddress>\n\t\t\t\t\t<\/DNSServerSearchOrder>\n\t\t\t\t\t<Identifier>Ethernet<\/Identifier>\n\t\t\t\t\t<EnableAdapterDomainNameRegistration>true<\/EnableAdapterDomainNameRegistration>\n\t\t\t\t\t<DisableDynamicUpdate>false<\/DisableDynamicUpdate>\n\t\t\t\t\t<DNSDomain>workshop.local<\/DNSDomain>\n\t\t\t\t<\/Interface>\n\t\t\t<\/Interfaces>\n\t\t\t<DNSDomain>@@{domain}@@<\/DNSDomain>\n\t\t\t<UseDomainNameDevolution>true<\/UseDomainNameDevolution>\n\t\t<\/component>\n     <component xmlns=\"\" name=\"Microsoft-Windows-TerminalServices-LocalSessionManager\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" processorArchitecture=\"amd64\">\n        <fDenyTSConnections>false<\/fDenyTSConnections>\n     <\/component>\n     <component xmlns=\"\" name=\"Microsoft-Windows-TerminalServices-RDP-WinStationExtensions\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" processorArchitecture=\"amd64\">\n        <UserAuthentication>0<\/UserAuthentication>\n     <\/component>\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Networking-MPSSVC-Svc\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <FirewallGroups>\n           <FirewallGroup wcm:action=\"add\" wcm:keyValue=\"RemoteDesktop\">\n              <Active>true<\/Active>\n              <Profile>all<\/Profile>\n              <Group>@FirewallAPI.dll,-28752<\/Group>\n           <\/FirewallGroup>\n        <\/FirewallGroups>\n     <\/component>\n  <\/settings>\n  <settings pass=\"oobeSystem\">\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <UserAccounts>\n           <AdministratorPassword>\n              <Value>@@{windows_local.secret}@@<\/Value>\n              <PlainText>true<\/PlainText>\n           <\/AdministratorPassword>\n        <\/UserAccounts>\n        <AutoLogon>\n           <Password>\n              <Value>@@{windows_local.secret}@@<\/Value>\n              <PlainText>true<\/PlainText>\n           <\/Password>\n           <Enabled>true<\/Enabled>\n           <Username>Administrator<\/Username>\n        <\/AutoLogon>\n        <FirstLogonCommands>\n           <SynchronousCommand wcm:action=\"add\">\n              <CommandLine>cmd.exe \/c netsh firewall add portopening TCP 5985 \"Port 5985\"<\/CommandLine>\n              <Description>Win RM port open<\/Description>\n              <Order>1<\/Order>\n              <RequiresUserInput>true<\/RequiresUserInput>\n           <\/SynchronousCommand>\n           <SynchronousCommand wcm:action=\"add\">\n              <CommandLine>powershell -Command \"Enable-PSRemoting -SkipNetworkProfileCheck -Force\"<\/CommandLine>\n              <Description>Enable PS-Remoting<\/Description>\n              <Order>2<\/Order>\n              <RequiresUserInput>true<\/RequiresUserInput>\n           <\/SynchronousCommand>\n           <SynchronousCommand wcm:action=\"add\">\n              <CommandLine>powershell -Command \"Set-ExecutionPolicy -ExecutionPolicy RemoteSigned\"<\/CommandLine>\n              <Description>Enable Remote-Signing<\/Description>\n              <Order>3<\/Order>\n              <RequiresUserInput>false<\/RequiresUserInput>\n           <\/SynchronousCommand>\n        <\/FirstLogonCommands>\n        <OOBE>\n           <HideEULAPage>true<\/HideEULAPage>\n           <SkipMachineOOBE>true<\/SkipMachineOOBE>\n        <\/OOBE>\n     <\/component>\n     <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n        <InputLocale>en-US<\/InputLocale>\n        <SystemLocale>en-US<\/SystemLocale>\n        <UILanguageFallback>en-us<\/UILanguageFallback>\n        <UILanguage>en-US<\/UILanguage>\n           <UserLocale>en-US<\/UserLocale>\n     <\/component>\n  <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"CALM_MoE_Template","uuid":"a327cc9d-e387-4e72-8503-6672d3046558"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":{"kind":"image","type":"","name":"MSSQLServer2016-SP2","uuid":"10db3569-35a8-47a3-b79d-9cfcc319b99b"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":1,"adapter_type":"IDE"},"device_type":"CDROM"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":2,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":3,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":4,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":5,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":8192,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":6,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"infoblox"},{"username":"administrator","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"windows_local"},{"username":"sa","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"sa"},{"username":"salah.gassim@emeagso.lab","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"pc"},{"username":"workshop\\administrator","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"cluster_install"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"PreDeployment"}],"name":"ExisitngPackage","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ExisitngPackage"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"2810fe0a_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"466f6e04_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"2810fe0a_dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"ExisitngPackage"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"deleteIP"}],"name":"8a458e11_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"PreDeployment"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"deleteIP","state":"ACTIVE","attrs":{"script":"#script\n\nget_base_url = \"https:\/\/@@{INFOBLOX_IP}@@\/wapi\/v2.4\/record:host?name=\"\ndelete_base_url = \"https:\/\/10.48.104.32\/wapi\/v2.4\/\"\nuser = \"@@{infoblox.username}@@\"\npassword = \"@@{infoblox.secret}@@\"\nheaders = {'Accept': 'application\/json', 'Content-Type': 'application\/json; charset=UTF-8'}\nvmName = [\"@@{AD.NODE1_NAME}@@\",\"@@{AD.NODE2_NAME}@@\",\"@@{WSFC_NAME}@@\",\"@@{SQLCLUSTER_NAME}@@\"]\n\ndef process_request(url, method, user, password, headers, payload=None):\n    if (payload != None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth=\"BASIC\", user=user, passwd=password, params=payload, verify=False, headers=headers)\n    return r\n\nfor host in vmName:\n    base_url = get_base_url + host.lower() +\".@@{domain}@@\"\n    r = process_request(base_url, 'GET', user, password, headers)\n    result = json.loads(r.content)\n    print result[0]['_ref']\n    print delete_base_url + result[0]['_ref']\n    #################\n    base_url = delete_base_url + result[0]['_ref']\n    r = process_request(base_url, 'DELETE', user, password, headers)\n    result = json.loads(r.content)\n    print result\n    \n\n\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"6a62daa1_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"8a458e11_dag"},"message_list":[],"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Node1"}],"name":"Package2","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"JoinDomain"},{"kind":"app_task","name":"EnableNGT"},{"kind":"app_task","name":"WaitforReboot_1"},{"kind":"app_task","name":"InitializeDisk"},{"kind":"app_task","name":"AdditionalConfig"},{"kind":"app_task","name":"InstallAntivirus"},{"kind":"app_task","name":"WaitforReboot_2"},{"kind":"app_task","name":"InstallSQL"},{"kind":"app_task","name":"InstallWindowsFeatures"}],"name":"5eb24fbb_dag","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"JoinDomain"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"WaitforReboot_1"}},{"from_task_reference":{"kind":"app_task","name":"InstallAntivirus"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"WaitforReboot_2"}},{"from_task_reference":{"kind":"app_task","name":"InitializeDisk"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"AdditionalConfig"}},{"from_task_reference":{"kind":"app_task","name":"WaitforReboot_2"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InstallSQL"}},{"from_task_reference":{"kind":"app_task","name":"AdditionalConfig"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InstallAntivirus"}},{"from_task_reference":{"kind":"app_task","name":"InstallSQL"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InstallWindowsFeatures"}},{"from_task_reference":{"kind":"app_task","name":"EnableNGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"WaitforReboot_1"}},{"from_task_reference":{"kind":"app_task","name":"WaitforReboot_1"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InitializeDisk"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"JoinDomain","state":"ACTIVE","attrs":{"exit_status":[],"script":"$HOSTNAME = \"@@{AD.NODE1_NAME}@@\"\n\nfunction Set-Hostname{\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$Hostname\n)\n  if ($Hostname -eq  $(hostname)){\n    Write-Host \"Hostname already set.\"\n  } else{\n    Rename-Computer -NewName $HOSTNAME -ErrorAction Stop\n  }\n}\n\nfunction JointoDomain {\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$DomainName,\n      [parameter(Mandatory=$false)]\n      [string]$OU,\n      [parameter(Mandatory=$true)]\n      [string]$Username,\n      [parameter(Mandatory=$true)]\n      [string]$Password,\n      [parameter(Mandatory=$true)]\n      [string]$Server\n  )\n  $adapter = Get-NetAdapter | ? {$_.Status -eq \"up\"}\n  $adapter | Set-DnsClientServerAddress -ServerAddresses $Server\n\n  if ($env:computername  -eq $env:userdomain) {\n    Write-Host \"Not in domain\"\n    $adminname = \"$Username\"\n    $adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$Password\"\n    Write-Host \"$adminname , $password\"\n    $credential = New-Object System.Management.Automation.PSCredential($adminname,$adminpassword)\n    Add-computer -DomainName $DomainName -Credential $credential -force -Options JoinWithNewName,AccountCreate -PassThru -ErrorAction Stop\n  } else {\n     Write-Host \"Already in domain\"\n  }\n}\n\nif ($HOSTNAME -ne $Null){\n  Write-Host \"Setting Hostname\"\n  Set-Hostname -Hostname $HOSTNAME\n}\n\nJointoDomain -DomainName \"workshop.local\" -Username \"@@{cluster_install.username}@@\" -Password \"@@{cluster_install.secret}@@\" -Server \"@@{AD_IP}@@\"\n\nRestart-Computer -Force -AsJob\nexit 0\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"EnableNGT","state":"ACTIVE","attrs":{"script":"#script\nprint \"Enabling NGT...\"\n\nvm_uuid = \"@@{platform.metadata.uuid}@@\"\nvm_uuid_url = \"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/vms\/\" + vm_uuid\ncluster_uuid_url = \"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/clusters\/\"\n\npc_user = \"@@{pc.username}@@\"\npc_password = \"@@{pc.secret}@@\"\nheaders = {'Accept': 'application\/json', 'Content-Type': 'application\/json; charset=UTF-8'}\n\ndef process_request(url, method, user, password, headers, payload=None):\n    if (payload != None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth=\"BASIC\", user=user, passwd=password, params=payload, verify=False, headers=headers)\n    return r\n\nprint vm_uuid_url\nr = process_request(vm_uuid_url, 'GET', pc_user, pc_password, headers)\nresult = json.loads(r.content)\nprint result\nprint result[\"status\"][\"cluster_reference\"][\"uuid\"]\ncluster_uuid = result[\"status\"][\"cluster_reference\"][\"uuid\"]\n###########\ncluster_uuid_url = cluster_uuid_url + cluster_uuid\nr = process_request(cluster_uuid_url, 'GET', pc_user, pc_password, headers)\nresult = json.loads(r.content)\nprint result\nprint result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\ncluster_ip = result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\n###########\nconfig_url = \"https:\/\/\"+ cluster_ip + \":9440\/PrismGateway\/services\/rest\/v1\/vms\/\" + cluster_uuid + \"::\" + vm_uuid + \"\/guest_tools\/\"\nprint config_url\npayload = {\n  \"vmUuid\": cluster_uuid + \"::\" + vm_uuid,\n  \"enabled\": \"true\",\n  \"applications\": {\n    \"file_level_restore\": \"false\",\n    \"vss_snapshot\": \"true\"\n  }\n}\nr = process_request(config_url, 'POST', pc_user, pc_password,headers, payload)\nresult = json.loads(r.content)\nprint result","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"WaitforReboot_1","state":"ACTIVE","attrs":{"type":"","interval_secs":90},"timeout_secs":"0","type":"DELAY","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InitializeDisk","state":"ACTIVE","attrs":{"exit_status":[],"script":"Get-Disk -Number 1 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 2 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 3 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 4 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 5 | Initialize-Disk -ErrorAction SilentlyContinue\n\n\nNew-Partition -DiskNumber 1 -DriveLetter F -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 2 -DriveLetter G -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 3 -DriveLetter H -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 4 -DriveLetter I -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 5 -DriveLetter J -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\n\nFormat-Volume -DriveLetter F -FileSystem NTFS -NewFileSystemLabel \"SQLINSTALL\" -Confirm:$false\nFormat-Volume -DriveLetter G -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"TEMPDB\" -Confirm:$false \nFormat-Volume -DriveLetter H -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"DATA\" -Confirm:$false \nFormat-Volume -DriveLetter I -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"TEMPDBLOG\" -Confirm:$false\nFormat-Volume -DriveLetter J -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"ULOG\" -Confirm:$false\n\nmkdir F:\\SQLINSTALL\nmkdir G:\\TEMPDB\nmkdir H:\\DATA\nmkdir I:\\TEMPDBLOG\nmkdir J:\\ULOG\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"AdditionalConfig","state":"ACTIVE","attrs":{"exit_status":[],"script":"#Add the requesting user to the Administrators group\nAdd-LocalGroupMember -Group \"Administrators\" -Member \"@@{AD.REQUESTER}@@\"\nAdd-LocalGroupMember -Group \"Administrators\" -Member \"@@{cluster_install.username}@@\"\n\n#Add firewall rules for SQL Server\nNew-NetFirewallRule -DisplayName \"SQL Server\" -Direction Inbound -Protocol TCP -LocalPort 1433 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Admin Connection\" -Direction Inbound -Protocol TCP -LocalPort 1434 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Database Management\" -Direction Inbound -Protocol UDP -LocalPort 1434 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Service Broker\" -Direction Inbound -Protocol TCP -LocalPort 4022 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Debugger\/RPC\" -Direction Inbound -Protocol TCP -LocalPort 135 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Browser\" -Direction Inbound -Protocol TCP -LocalPort 2382 -Action allow\n#\nNew-NetFirewallRule -DisplayName \"Open Port 5022 for Availability Groups\" -Direction Inbound -Protocol TCP -LocalPort 5022 -Action allow\n#\nSet-NetFirewallRule -DisplayName \"File and Printer Sharing (Echo Request - ICMPv4-In)\" -Profile Any -Enabled True -Direction Inbound -Action Allow\nSet-NetFirewallRule -DisplayName \"File and Printer Sharing (Echo Request - ICMPv6-In)\" -Profile Any -Enabled True -Direction Inbound -Action Allow\nSet-NetFirewallRule -DisplayName \"Windows Management Instrumentation (WMI-In)\" -Profile Any -Enabled True -Direction Inbound -Action Allow\nSet-NetFirewallRule -DisplayName \"File and Printer Sharing (SMB-In)\" -Profile Any -Enabled True -Direction Inbound -Action Allow\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InstallAntivirus","state":"ACTIVE","attrs":{"exit_status":[],"script":"echo \"installing Antivirus...\"\n<#\n# This script detects platform and architecture.  It then downloads and installs the relevant Deep Security Agent 10 package\nif (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")) {\n   Write-Warning \"You are not running as an Administrator. Please try again with admin privileges.\"\n   exit 1 }\n$env:LogPath = \"$env:appdata\\Trend Micro\\Deep Security Agent\\installer\"\nNew-Item -path $env:LogPath -type directory\nStart-Transcript -path \"$env:LogPath\\dsa_deploy.log\" -append\necho \"$(Get-Date -format T) - DSA download started\"\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;\n$baseUrl=\"https:\/\/P-HQ-VM-DSM-02.moe.local:4119\/\"\nif ( [intptr]::Size -eq 8 ) { \n   $sourceUrl=-join($baseurl, \"software\/agent\/Windows\/x86_64\/\") }\nelse {\n   $sourceUrl=-join($baseurl, \"software\/agent\/Windows\/i386\/\") }\necho \"$(Get-Date -format T) - Download Deep Security Agent Package\" $sourceUrl\nTry\n{\n    (New-Object System.Net.WebClient).DownloadFile($sourceUrl,  \"$env:temp\\agent.msi\")\n}\nCatch [System.Net.WebException] {\necho \"TLS certificate validation for the agent package download has failed. Please check that your Deep Security Manager TLS certificate is signed by a trusted root certificate authority. For more information, search for `\"deployment scripts`\" in the Deep Security Help Center.\"\n exit 2;\n}\nif ( (Get-Item \"$env:temp\\agent.msi\").length -eq 0 ) {\necho \"Failed to download the Deep Security Agent. Please check if the package is imported into the Deep Security Manager. \"\n exit 1 }\necho \"$(Get-Date -format T) - Downloaded File Size:\" (Get-Item \"$env:temp\\agent.msi\").length\necho \"$(Get-Date -format T) - DSA install started\"\necho \"$(Get-Date -format T) - Installer Exit Code:\" (Start-Process -FilePath msiexec -ArgumentList \"\/i $env:temp\\agent.msi \/qn ADDLOCAL=ALL \/l*v `\"$env:LogPath\\dsa_install.log`\"\" -Wait -PassThru).ExitCode \necho \"$(Get-Date -format T) - DSA activation started\"\nStart-Sleep -s 50\n& $Env:ProgramFiles\"\\Trend Micro\\Deep Security Agent\\dsa_control\" -r\n& $Env:ProgramFiles\"\\Trend Micro\\Deep Security Agent\\dsa_control\" -a dsm:\/\/P-HQ-VM-DSM-02.moe.local:4120\/ \"policyid:22\"\nStop-Transcript\necho \"$(Get-Date -format T) - DSA Deployment Finished\"\n\nRestart-Computer -Force -AsJob\n#>","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"WaitforReboot_2","state":"ACTIVE","attrs":{"type":"","interval_secs":60},"timeout_secs":"0","type":"DELAY","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InstallSQL","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"#Script can be used as a task in calm to install SQL Server - tested on Windows 2k12R2 and SQL Server 2014 SP3 on AHV\n\n$DriveLetter = $(Get-Partition -DiskNumber 1 -PartitionNumber 2 | select DriveLetter -ExpandProperty DriveLetter)\n\n$silentArgs = \"\/IACCEPTSQLSERVERLICENSETERMS \/Q \/ACTION=install \/FEATURES=SQLENGINE,CONN,IS,BC,SDK,BOL \/SECURITYMODE=sql \/SAPWD=`\"@@{sa.secret}@@`\" \/SQLSVCACCOUNT=`\"@@{cluster_install.username}@@`\" \/SQLSVCPASSWORD=`\"@@{cluster_install.secret}@@`\" \/ASSYSADMINACCOUNTS=`\"@@{cluster_install.username}@@`\" \/SQLSYSADMINACCOUNTS=`\"@@{cluster_install.username}@@`\" \/INSTANCEID=MSSQLSERVER \/INSTANCENAME=MSSQLSERVER \/UPDATEENABLED=False \/INDICATEPROGRESS \/TCPENABLED=1 \/SQLTEMPDBDIR=`\"G:\\TEMPDB`\" \/SQLTEMPDBLOGDIR=`\"I:\\TEMPDBLOG`\" \/SQLUSERDBLOGDIR=`\"J:\\ULOG`\" \/INSTALLSQLDATADIR=`\"${DriveLetter}:\\SQLINSTALL`\"\"\n$setupDriveLetter = \"D:\"\n$setupPath = \"$setupDriveLetter\\setup.exe\"\n\n########################################################\n\n$timeout = 10 # 15 minutes\n$i = 0\n$taskAction = New-ScheduledTaskAction -Execute $setupPath -Argument $silentArgs\n#$taskAction = New-ScheduledTaskAction -Execute 'c:\\windows\\system32\\cmd.exe' -Argument '\/c net user'\n \n$trigger =  New-ScheduledTaskTrigger -Once -At (Get-Date).AddSeconds(5)\n \nRegister-ScheduledTask -Action $taskAction -Trigger $trigger -TaskName SQLInstall -Description \"Install SQL\" -User \"@@{windows_local.username}@@\" -Password \"@@{windows_local.secret}@@\"\n\ndo\n{\n\nsleep(90)\necho \"SQL Server installation in progress, please wait...\"\n$taskCode = (Get-ScheduledTaskInfo -TaskName \"\\SQLInstall\").LastTaskResult\n$state = (Get-ScheduledTask -TaskName SQLInstall).State\nif($taskCode -eq 0) {\n echo \"finished\";\n Unregister-ScheduledTask -TaskName SQLInstall -Confirm:$false\n break \n } elseif (($state -eq \"Ready\") -and ($taskCode -ne 0) )\n{\n echo \"task finished with error \"#;continue \n }\n \n$i++\nif($i > $timeout) {\necho \"timeout\";\nUnregister-ScheduledTask -TaskName SQLInstall -Confirm:$false\nbreak\n}\n} while (Get-ScheduledTask -TaskName SQLInstall | Where state -eq \"Running\")\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InstallWindowsFeatures","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"echo \"Installing Failover-Clustering\"\nInstall-WindowsFeature \u2013Name Failover-Clustering \u2013IncludeManagementTools\necho \"Installing RSAT-AD-PowerShell\"\nInstall-WindowsFeature -Name RSAT-AD-PowerShell","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"85184051_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"5eb24fbb_dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"RemoveDomain"}],"name":"0b27c58e_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"RemoveDomain","state":"ACTIVE","attrs":{"exit_status":[],"script":"function RemoveFromDomain {\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$DomainName,\n      [parameter(Mandatory=$false)]\n      [string]$OU,\n      [parameter(Mandatory=$true)]\n      [string]$Username,\n      [parameter(Mandatory=$true)]\n      [string]$Password\n  )\n  $adapter = Get-NetAdapter | ? {$_.Status -eq \"up\"}\n  $adapter | Set-DnsClientServerAddress -ServerAddresses $Server\n\n  $adminname = \"$Username\"\n  $adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$Password\"\n  Write-Host \"$adminname , $password\"\n  $credential = New-Object System.Management.Automation.PSCredential($adminname,$adminpassword)\n  Remove-computer -UnjoinDomaincredential $credential -PassThru -Verbose -Force\n  Write-Host \"Removed from domain @@{domain}@@\"\n}\n\nRemoveFromDomain -DomainName \"workshop.local\" -Username \"@@{cluster_install.username}@@\" -Password \"@@{cluster_install.secret}@@\"\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"c84f97a1_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"0b27c58e_dag"},"message_list":[],"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AD"}],"name":"Package3","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package3"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"GetNames"},{"kind":"app_task","name":"CreateGroup"},{"kind":"app_task","name":"ConfigureDelegation"}],"name":"133d89e2_dag","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"GetNames"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CreateGroup"}},{"from_task_reference":{"kind":"app_task","name":"CreateGroup"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"ConfigureDelegation"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"GetNames","state":"ACTIVE","attrs":{"exit_status":[],"script":"$appName= \"@@{calm_application_name}@@\"\n$hostCount = @@{HOST_COUNT}@@\n$userInput = $appName.Substring(0,3).ToUpper()\necho $appName\n$found = Get-DnsServerResourceRecord -ZoneName \"workshop.local\" | Where-Object {$_.hostname -match '^P-HQ-VM-'+$userInput+'.*'} | Sort-Object -Property hostname -Descending | Select-Object -First 1\nif ($found) { \n\necho \"VM related to this app where found, generating incremental names\"\n\n$incr = $found.HostName.Split(\"-\")\n$appIndex = [int]$incr[4]\nfor ($i = 1; $i -le $hostCount; $i++) {\n$appIndex++\n$vmname = $incr[0] + \"-\"+ $incr[1] + \"-\"+ $incr[2] + \"-\"+ $incr[3] + \"-\"+ $appIndex.ToString(\"00\")\n$node = \"NODE$i\" +\"_NAME\"\necho \"$node=$vmname\"\n\n}\n} \n\nelse {\necho \"No VM related to this app where found, generating new names\"\nfor ($i = 1; $i -le $hostCount; $i++) {\n$vmname = \"P-HQ-VM-$userInput-0$i\"\necho \"NODE$i`_NAME=$vmname\"\n}\n\n}\n\n# get formated user name\n$Requester = Get-ADUser -Filter \"UserPrincipalName -eq '@@{USERNAME}@@'\"\n$user = $Requester.GivenName\necho \"REQUESTER=$user\"\n\n\n","eval_variables":["NODE1_NAME","NODE2_NAME","REQUESTER"],"eval_scope":"local","script_type":"npsscript","type":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"CreateGroup","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"$clusterComputerObj = \"@@{WSFC_NAME}@@\"  + \"$\"\n$node1ComputerObj = \"@@{NODE1_NAME}@@\" + \"$\"\n$node2ComputerObj = \"@@{NODE2_NAME}@@\" + \"$\"\n$groupName = \"@@{WSFC_NAME}@@\" + \"_cluster\"\n\necho \"Creating cluster computer object...\"\nNew-ADComputer -Name \"@@{WSFC_NAME}@@\" -SamAccountName \"@@{WSFC_NAME}@@\" -Path \"@@{OU}@@\" -Enabled $False\nNew-ADComputer -Name \"@@{NODE1_NAME}@@\" -SamAccountName \"@@{NODE1_NAME}@@\" -Path \"@@{OU}@@\" -Enabled $False\nNew-ADComputer -Name \"@@{NODE2_NAME}@@\" -SamAccountName \"@@{NODE2_NAME}@@\" -Path \"@@{OU}@@\" -Enabled $False\necho \"Creating cluster group and adding members...\"\nNew-ADGroup -Name $groupName -GroupScope Global -DisplayName \"@@{WSFC_NAME}@@\" -Path \"@@{OU}@@\" -Description \"@@{WSFC_NAME}@@ cluster group\" -GroupCategory Security\n\nAdd-ADGroupMember -Identity $groupName -Members \"$node1ComputerObj\",\"$node2ComputerObj\",\"$clusterComputerObj\"","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"ConfigureDelegation","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"function Set-ComputerDelegation() {\n\tparam(\n\t[string]$ou,\n\t[string]$groupName\n\t)\n    $ADRights = \"GenericAll\"\n    $aceType = \"Allow\"\n    # get the schemaIDGuid for the computer class\n    $computerObjectGuid = new-object Guid bf967a86-0de6-11d0-a285-00aa003049e2\n    $identity = New-Object System.Security.Principal.SecurityIdentifier (Get-ADGroup $groupName).SID\n    $acl = get-acl $ou\n    $ace = new-object System.DirectoryServices.ActiveDirectoryAccessRule $identity,$ADRights,$aceType,\"All\",$computerObjectGuid\n\n    $acl.AddAccessRule($ace)\n    set-acl -aclobject $acl $ou\n}\n\n$ou = \"AD:\\\\\" + \"@@{OU}@@\"\n$groupName = \"@@{WSFC_NAME}@@\"+ \"_cluster\"\nSet-ComputerDelegation -ou $ou -groupName $groupName","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"6755b03c_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"133d89e2_dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package3"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"CleanADObject"},{"kind":"app_task","name":"RemoveDelegation"}],"name":"e8cbe4d8_dag","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"CleanADObject"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"RemoveDelegation"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"CleanADObject","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"#$clusterComputerObj = \"@@{WSFC_NAME}@@\"  + \"$\"\n\n$groupName = \"@@{WSFC_NAME}@@\" + \"_cluster\"\n\necho \"Removing cluster computer object @@{WSFC_NAME}@@...\"\nRemove-ADComputer -Identity \"@@{WSFC_NAME}@@\" -Confirm:$false\necho \"Removing cluster group $groupName...\"\nRemove-ADGroup -Identity $groupName  -Confirm:$false\necho \"Removing SQL cluster listener @@{calm_application_name}@@lsnt...\"\nRemove-ADComputer -Identity \"@@{calm_application_name}@@lsnt\" -Confirm:$false","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AD"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"RemoveDelegation","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"Import-Module activedirectory\nset-location ad:\nfunction Remove-ComputerDelegation() {\n    param(\n    [string]$ou,\n    [string]$groupName\n    )\n      \n    $myAcl = Get-Acl $ou\n    echo $grp\n    foreach ($access in $myAcl.Access)\n    {\n      if ($access.IdentityReference.Value -eq \"$groupName\")\n      {\n          $myAcl.RemoveAccessRule($access)\n          Set-Acl $ou -AclObject $myAcl -Verbose\n      } \n    }\n}\n\n$ou = \"AD:\\\\\" + \"@@{OU}@@\"\n$groupName = \"@@{WSFC_NAME}@@\" + \"_cluster\"\n\n$domain = \"workshop.local\".split('.')\n$identity = $domain[0].ToUpper() , $groupName\necho \"Removing computer delegation for cluster object...\"\nRemove-ComputerDelegation -ou $ou -groupName [string]::join(\"\\\",$identity)\n\n\n\n\n\n\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"9daaae12_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"e8cbe4d8_dag"},"message_list":[],"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Node2"}],"name":"Package","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"JoinDomain"},{"kind":"app_task","name":"EnableNGT"},{"kind":"app_task","name":"WaitforReboot"},{"kind":"app_task","name":"InitializeDisk"},{"kind":"app_task","name":"AdditionalConfig"},{"kind":"app_task","name":"InstallAntivirus"},{"kind":"app_task","name":"WaitforReboot_2"},{"kind":"app_task","name":"InstallSQL"},{"kind":"app_task","name":"InstallWindowsFeatures"}],"name":"5eb24fbb_dag_cloned_1","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"JoinDomain"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"WaitforReboot"}},{"from_task_reference":{"kind":"app_task","name":"InstallAntivirus"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"WaitforReboot_2"}},{"from_task_reference":{"kind":"app_task","name":"InitializeDisk"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"AdditionalConfig"}},{"from_task_reference":{"kind":"app_task","name":"WaitforReboot_2"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InstallSQL"}},{"from_task_reference":{"kind":"app_task","name":"AdditionalConfig"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InstallAntivirus"}},{"from_task_reference":{"kind":"app_task","name":"InstallSQL"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InstallWindowsFeatures"}},{"from_task_reference":{"kind":"app_task","name":"EnableNGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"WaitforReboot"}},{"from_task_reference":{"kind":"app_task","name":"WaitforReboot"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"InitializeDisk"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"JoinDomain","state":"ACTIVE","attrs":{"exit_status":[],"script":"$HOSTNAME = \"@@{AD.NODE2_NAME}@@\"\n\nfunction Set-Hostname{\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$Hostname\n)\n  if ($Hostname -eq  $(hostname)){\n    Write-Host \"Hostname already set.\"\n  } else{\n    Rename-Computer -NewName $HOSTNAME -ErrorAction Stop\n  }\n}\n\nfunction JointoDomain {\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$DomainName,\n      [parameter(Mandatory=$false)]\n      [string]$OU,\n      [parameter(Mandatory=$true)]\n      [string]$Username,\n      [parameter(Mandatory=$true)]\n      [string]$Password,\n      [parameter(Mandatory=$true)]\n      [string]$Server\n  )\n  $adapter = Get-NetAdapter | ? {$_.Status -eq \"up\"}\n  $adapter | Set-DnsClientServerAddress -ServerAddresses $Server\n\n  if ($env:computername  -eq $env:userdomain) {\n    Write-Host \"Not in domain\"\n    $adminname = \"$Username\"\n    $adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$Password\"\n    Write-Host \"$adminname , $password\"\n    $credential = New-Object System.Management.Automation.PSCredential($adminname,$adminpassword)\n    Add-computer -DomainName $DomainName -Credential $credential -force -Options JoinWithNewName,AccountCreate -PassThru -ErrorAction Stop\n  } else {\n     Write-Host \"Already in domain\"\n  }\n}\n\nif ($HOSTNAME -ne $Null){\n  Write-Host \"Setting Hostname\"\n  Set-Hostname -Hostname $HOSTNAME\n}\n\nJointoDomain -DomainName \"workshop.local\" -Username \"@@{cluster_install.username}@@\" -Password \"@@{cluster_install.secret}@@\" -Server \"@@{AD_IP}@@\"\n\nRestart-Computer -Force -AsJob\nexit 0\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"EnableNGT","state":"ACTIVE","attrs":{"script":"#script\nprint \"Enabling NGT...\"\n\nvm_uuid = \"@@{platform.metadata.uuid}@@\"\nvm_uuid_url = \"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/vms\/\" + vm_uuid\ncluster_uuid_url = \"https:\/\/@@{PC_IP}@@:9440\/api\/nutanix\/v3\/clusters\/\"\n\npc_user = \"@@{pc.username}@@\"\npc_password = \"@@{pc.secret}@@\"\nheaders = {'Accept': 'application\/json', 'Content-Type': 'application\/json; charset=UTF-8'}\n\ndef process_request(url, method, user, password, headers, payload=None):\n    if (payload != None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth=\"BASIC\", user=user, passwd=password, params=payload, verify=False, headers=headers)\n    return r\n\nprint vm_uuid_url\nr = process_request(vm_uuid_url, 'GET', pc_user, pc_password, headers)\nresult = json.loads(r.content)\nprint result\nprint result[\"status\"][\"cluster_reference\"][\"uuid\"]\ncluster_uuid = result[\"status\"][\"cluster_reference\"][\"uuid\"]\n###########\ncluster_uuid_url = cluster_uuid_url + cluster_uuid\nr = process_request(cluster_uuid_url, 'GET', pc_user, pc_password, headers)\nresult = json.loads(r.content)\nprint result\nprint result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\ncluster_ip = result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\n###########\nconfig_url = \"https:\/\/\"+ cluster_ip + \":9440\/PrismGateway\/services\/rest\/v1\/vms\/\" + cluster_uuid + \"::\" + vm_uuid + \"\/guest_tools\/\"\nprint config_url\npayload = {\n  \"vmUuid\": cluster_uuid + \"::\" + vm_uuid,\n  \"enabled\": \"true\",\n  \"applications\": {\n    \"file_level_restore\": \"false\",\n    \"vss_snapshot\": \"true\"\n  }\n}\nr = process_request(config_url, 'POST', pc_user, pc_password,headers, payload)\nresult = json.loads(r.content)\nprint result","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"WaitforReboot","state":"ACTIVE","attrs":{"type":"","interval_secs":90},"timeout_secs":"0","type":"DELAY","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InitializeDisk","state":"ACTIVE","attrs":{"exit_status":[],"script":"Get-Disk -Number 1 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 2 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 3 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 4 | Initialize-Disk -ErrorAction SilentlyContinue\nGet-Disk -Number 5 | Initialize-Disk -ErrorAction SilentlyContinue\n\n\nNew-Partition -DiskNumber 1 -DriveLetter F -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 2 -DriveLetter G -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 3 -DriveLetter H -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 4 -DriveLetter I -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\nNew-Partition -DiskNumber 5 -DriveLetter J -UseMaximumSize -ErrorAction SilentlyContinue | Format-Volume -Confirm:$false\n\nFormat-Volume -DriveLetter F -FileSystem NTFS -NewFileSystemLabel \"SQLINSTALL\" -Confirm:$false\nFormat-Volume -DriveLetter G -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"TEMPDB\" -Confirm:$false \nFormat-Volume -DriveLetter H -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"DATA\" -Confirm:$false \nFormat-Volume -DriveLetter I -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"TEMPDBLOG\" -Confirm:$false\nFormat-Volume -DriveLetter J -AllocationUnitSize 65536 -FileSystem NTFS -NewFileSystemLabel \"ULOG\" -Confirm:$false\n\nmkdir F:\\SQLINSTALL\nmkdir G:\\TEMPDB\nmkdir H:\\DATA\nmkdir I:\\TEMPDBLOG\nmkdir J:\\ULOG\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"AdditionalConfig","state":"ACTIVE","attrs":{"exit_status":[],"script":"#Add the requesting user to the Administrators group\nAdd-LocalGroupMember -Group \"Administrators\" -Member \"@@{AD.REQUESTER}@@\"\nAdd-LocalGroupMember -Group \"Administrators\" -Member \"@@{cluster_install.username}@@\"\n\n#Add firewall rules for SQL Server\nNew-NetFirewallRule -DisplayName \"SQL Server\" -Direction Inbound -Protocol TCP -LocalPort 1433 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Admin Connection\" -Direction Inbound -Protocol TCP -LocalPort 1434 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Database Management\" -Direction Inbound -Protocol UDP -LocalPort 1434 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Service Broker\" -Direction Inbound -Protocol TCP -LocalPort 4022 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Debugger\/RPC\" -Direction Inbound -Protocol TCP -LocalPort 135 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Browser\" -Direction Inbound -Protocol TCP -LocalPort 2382 -Action allow\n#\nNew-NetFirewallRule -DisplayName \"Open Port 5022 for Availability Groups\" -Direction Inbound -Protocol TCP -LocalPort 5022 -Action allow\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InstallAntivirus","state":"ACTIVE","attrs":{"exit_status":[],"script":"echo \"installing Antivirus...\"\n<#\n# This script detects platform and architecture.  It then downloads and installs the relevant Deep Security Agent 10 package\nif (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")) {\n   Write-Warning \"You are not running as an Administrator. Please try again with admin privileges.\"\n   exit 1 }\n$env:LogPath = \"$env:appdata\\Trend Micro\\Deep Security Agent\\installer\"\nNew-Item -path $env:LogPath -type directory\nStart-Transcript -path \"$env:LogPath\\dsa_deploy.log\" -append\necho \"$(Get-Date -format T) - DSA download started\"\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;\n$baseUrl=\"https:\/\/P-HQ-VM-DSM-02.moe.local:4119\/\"\nif ( [intptr]::Size -eq 8 ) { \n   $sourceUrl=-join($baseurl, \"software\/agent\/Windows\/x86_64\/\") }\nelse {\n   $sourceUrl=-join($baseurl, \"software\/agent\/Windows\/i386\/\") }\necho \"$(Get-Date -format T) - Download Deep Security Agent Package\" $sourceUrl\nTry\n{\n    (New-Object System.Net.WebClient).DownloadFile($sourceUrl,  \"$env:temp\\agent.msi\")\n}\nCatch [System.Net.WebException] {\necho \"TLS certificate validation for the agent package download has failed. Please check that your Deep Security Manager TLS certificate is signed by a trusted root certificate authority. For more information, search for `\"deployment scripts`\" in the Deep Security Help Center.\"\n exit 2;\n}\nif ( (Get-Item \"$env:temp\\agent.msi\").length -eq 0 ) {\necho \"Failed to download the Deep Security Agent. Please check if the package is imported into the Deep Security Manager. \"\n exit 1 }\necho \"$(Get-Date -format T) - Downloaded File Size:\" (Get-Item \"$env:temp\\agent.msi\").length\necho \"$(Get-Date -format T) - DSA install started\"\necho \"$(Get-Date -format T) - Installer Exit Code:\" (Start-Process -FilePath msiexec -ArgumentList \"\/i $env:temp\\agent.msi \/qn ADDLOCAL=ALL \/l*v `\"$env:LogPath\\dsa_install.log`\"\" -Wait -PassThru).ExitCode \necho \"$(Get-Date -format T) - DSA activation started\"\nStart-Sleep -s 50\n& $Env:ProgramFiles\"\\Trend Micro\\Deep Security Agent\\dsa_control\" -r\n& $Env:ProgramFiles\"\\Trend Micro\\Deep Security Agent\\dsa_control\" -a dsm:\/\/P-HQ-VM-DSM-02.moe.local:4120\/ \"policyid:22\"\nStop-Transcript\necho \"$(Get-Date -format T) - DSA Deployment Finished\"\n\nRestart-Computer -Force -AsJob\n#>","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"windows_local"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"WaitforReboot_2","state":"ACTIVE","attrs":{"type":"","interval_secs":60},"timeout_secs":"0","type":"DELAY","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InstallSQL","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"#Script can be used as a task in calm to install SQL Server - tested on Windows 2k12R2 and SQL Server 2014 SP3 on AHV\n\n$DriveLetter = $(Get-Partition -DiskNumber 1 -PartitionNumber 2 | select DriveLetter -ExpandProperty DriveLetter)\n\n$silentArgs = \"\/IACCEPTSQLSERVERLICENSETERMS \/Q \/ACTION=install \/FEATURES=SQLENGINE,CONN,IS,BC,SDK,BOL \/SECURITYMODE=sql \/SAPWD=`\"@@{sa.secret}@@`\" \/SQLSVCACCOUNT=`\"@@{cluster_install.username}@@`\" \/SQLSVCPASSWORD=`\"@@{cluster_install.secret}@@`\" \/ASSYSADMINACCOUNTS=`\"@@{cluster_install.username}@@`\" \/SQLSYSADMINACCOUNTS=`\"@@{cluster_install.username}@@`\" \/INSTANCEID=MSSQLSERVER \/INSTANCENAME=MSSQLSERVER \/UPDATEENABLED=False \/INDICATEPROGRESS \/TCPENABLED=1 \/SQLTEMPDBDIR=`\"G:\\TEMPDB`\" \/SQLTEMPDBLOGDIR=`\"I:\\TEMPDBLOG`\" \/SQLUSERDBLOGDIR=`\"J:\\ULOG`\" \/INSTALLSQLDATADIR=`\"${DriveLetter}:\\SQLINSTALL`\"\"\n$setupDriveLetter = \"D:\"\n$setupPath = \"$setupDriveLetter\\setup.exe\"\n\n########################################################\n\n$timeout = 10 # 15 minutes\n$i = 0\n$taskAction = New-ScheduledTaskAction -Execute $setupPath -Argument $silentArgs\n#$taskAction = New-ScheduledTaskAction -Execute 'c:\\windows\\system32\\cmd.exe' -Argument '\/c net user'\n \n$trigger =  New-ScheduledTaskTrigger -Once -At (Get-Date).AddSeconds(5)\n \nRegister-ScheduledTask -Action $taskAction -Trigger $trigger -TaskName SQLInstall -Description \"Install SQL\" -User \"@@{windows_local.username}@@\" -Password \"@@{windows_local.secret}@@\"\n\ndo\n{\n\nsleep(90)\necho \"SQL Server installation in progress, please wait...\"\n$taskCode = (Get-ScheduledTaskInfo -TaskName \"\\SQLInstall\").LastTaskResult\n$state = (Get-ScheduledTask -TaskName SQLInstall).State\nif($taskCode -eq 0) {\n echo \"finished\";\n Unregister-ScheduledTask -TaskName SQLInstall -Confirm:$false\n break \n } elseif (($state -eq \"Ready\") -and ($taskCode -ne 0) )\n{\n echo \"task finished with error \"#;continue \n }\n \n$i++\nif($i > $timeout) {\necho \"timeout\";\nUnregister-ScheduledTask -TaskName SQLInstall -Confirm:$false\nbreak\n}\n} while (Get-ScheduledTask -TaskName SQLInstall | Where state -eq \"Running\")\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"InstallWindowsFeatures","state":"NOT_VALIDATED","attrs":{"exit_status":[],"script":"echo \"Installing Failover-Clustering\"\nInstall-WindowsFeature \u2013Name Failover-Clustering \u2013IncludeManagementTools\necho \"Installing RSAT-AD-PowerShell\"\nInstall-WindowsFeature -Name RSAT-AD-PowerShell","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"85184051_runbook_cloned_0","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"5eb24fbb_dag_cloned_1"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"RemoveDomain"}],"name":"0b27c58e_dag_cloned_1","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node2"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"RemoveDomain","state":"ACTIVE","attrs":{"exit_status":[],"script":"function RemoveFromDomain {\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$DomainName,\n      [parameter(Mandatory=$false)]\n      [string]$OU,\n      [parameter(Mandatory=$true)]\n      [string]$Username,\n      [parameter(Mandatory=$true)]\n      [string]$Password\n  )\n  $adapter = Get-NetAdapter | ? {$_.Status -eq \"up\"}\n  $adapter | Set-DnsClientServerAddress -ServerAddresses $Server\n\n  $adminname = \"$Username\"\n  $adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$Password\"\n  Write-Host \"$adminname , $password\"\n  $credential = New-Object System.Management.Automation.PSCredential($adminname,$adminpassword)\n  Remove-computer -UnjoinDomaincredential $credential -PassThru -Verbose -Force\n  Write-Host \"Removed from domain @@{domain}@@\"\n}\n\nRemoveFromDomain -DomainName \"workshop.local\" -Username \"@@{cluster_install.username}@@\" -Password \"@@{cluster_install.secret}@@\"\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"cluster_install"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"c84f97a1_runbook_cloned_0","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"0b27c58e_dag_cloned_1"},"message_list":[],"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"57a67137_deployment","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"ExisitngPackage"}],"substrate_local_reference":{"kind":"app_substrate","name":"PreDeploy"},"min_replicas":"1","variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"90fd8c42_deployment","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2"}],"substrate_local_reference":{"kind":"app_substrate","name":"WindowsStd"},"min_replicas":"1","variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"9b5477e5_deployment","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package3"}],"substrate_local_reference":{"kind":"app_substrate","name":"ActiveDirectory"},"min_replicas":"1","variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"90fd8c42_deployment_cloned_0","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"WindowsStd2"},"min_replicas":"1","variable_list":[],"description":""}],"description":"","action_list":[],"name":"Default","variable_list":[{"val_type":"STRING","description":"","name":"domain","type":"LOCAL","value":"emeagso.lab","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"VLAN","type":"LOCAL","value":"54","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"USERNAME","type":"LOCAL","value":"salah@workshop.local","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"PRODUCT_KEY","type":"LOCAL","value":"","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"GATEWAY","type":"LOCAL","value":"10.68.99.1","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"DNS_SERVER","type":"LOCAL","value":"10.68.98.177","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"AD_IP","type":"LOCAL","value":"10.68.98.177","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"PC_IP","type":"LOCAL","value":"10.68.97.150","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"INFOBLOX_IP","type":"LOCAL","value":"10.48.104.32","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"SMTP_SERVER","type":"LOCAL","value":"10.68.98.177","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"WSFC_NAME","type":"LOCAL","value":"","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"SQLCLUSTER_NAME","type":"LOCAL","value":"","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"FILESHAREWITNESS","type":"LOCAL","value":"\\\\WIN-OMDMAGK34MI\\ClusterWitness\\","label":"","attrs":{"type":""}},{"val_type":"STRING","description":"","name":"OU","type":"LOCAL","value":"ou=SQLClusters,dc=workshop,dc=local","label":"","attrs":{"type":""}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"pc"},"type":"USER"},"name":"Salah-SQLCluster_v2"},"api_version":"3.0","metadata":{"last_update_time":"1561494250296808","kind":"blueprint","spec_version":118,"creation_time":"1557384538861643","name":"Salah-SQLCluster_v2"}}