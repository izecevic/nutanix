{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "CalmGetProjectNetwork",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "#region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     stephane.bourdeaud@nutanix.com\n# * version:    2019/09/20\n# task_name:    CalmGetNetworkProject\n# description:  Given a project UUID, returns the first AHV network assigned to \n#               that project. \n# output vars:  ahv_subnet\n# endregion\n\n#region capture Calm variables\nproject_name = \"@@{calm_project_name}@@\"\napi_server = \"@@{pc_ip}@@\"\nusername = \"@@{pc.username}@@\"\nusername_secret = \"@@{pc.secret}@@\"\n#endregion\n\n#region prepare api call (get projects)\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/projects/list\"\nlength = 100\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\npayload = {\n    \"kind\": \"project\", \n    \"length\":length, \n    \"offset\":0\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n# endregion\n\n\n#region process the results\nif resp.ok:\n    print (\"Request status code {} on {}\".format(resp.status_code,resp.request.url))\n    json_resp = json.loads(resp.content)\n    for project in json_resp['entities']:\n        if project_name == project['status']['name']:\n            ahv_subnet = project['spec']['resources']['subnet_reference_list'][0]['name']\n            print (\"ahv_subnet={}\".format(ahv_subnet))\n    exit(0)\nelse:\n    #api call failed\n    print(\"Request failed: {}\".format(resp.status_code))\n    #print(\"Headers: {}\".format(headers))\n    #print('Status code: {}'.format(resp.status_code))\n    #print('Response: {}'.format(json.dumps(json.loads(resp.content), indent=4)))\n    exit(1)\n# endregion"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "CalmGetProjectNetwork",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "#region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     stephane.bourdeaud@nutanix.com\n# * version:    2019/09/20\n# task_name:    CalmGetNetworkProject\n# description:  Given a project UUID, returns the first AHV network assigned to \n#               that project. \n# output vars:  ahv_subnet\n# endregion\n\n#region capture Calm variables\nproject_name = \"@@{calm_project_name}@@\"\napi_server = \"@@{pc_ip}@@\"\nusername = \"@@{pc.username}@@\"\nusername_secret = \"@@{pc.secret}@@\"\n#endregion\n\n#region prepare api call (get projects)\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/projects/list\"\nlength = 100\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\npayload = {\n    \"kind\": \"project\", \n    \"length\":length, \n    \"offset\":0\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n# endregion\n\n\n#region process the results\nif resp.ok:\n    print (\"Request status code {} on {}\".format(resp.status_code,resp.request.url))\n    json_resp = json.loads(resp.content)\n    for project in json_resp['entities']:\n        if project_name == project['status']['name']:\n            ahv_subnet = project['spec']['resources']['subnet_reference_list'][0]['name']\n            print (\"ahv_subnet={}\".format(ahv_subnet))\n    exit(0)\nelse:\n    #api call failed\n    print(\"Request failed: {}\".format(resp.status_code))\n    #print(\"Headers: {}\".format(headers))\n    #print('Status code: {}'.format(resp.status_code))\n    #print('Response: {}'.format(json.dumps(json.loads(resp.content), indent=4)))\n    exit(1)\n# endregion",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150161227838",
    "kind": "app_task",
    "uuid": "dd8705f5-5949-4061-bd79-0e946c1ea106",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150161227838",
    "name": "CalmGetProjectNetwork"
  }
}
