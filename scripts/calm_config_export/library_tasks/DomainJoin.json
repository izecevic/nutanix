{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "DomainJoin",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "npsscript",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "$DOMAIN = \"@@{DOMAIN}@@\"\n$DOMAIN_USERNAME = \"@@{DOMAIN_CRED.username}@@\"\n$DOMAIN_PASSWORD = \"@@{DOMAIN_CRED.secret}@@\"\n$AD_IP = \"@@{AD_IP}@@\"\n\nfunction JointoDomain {\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$DomainName,\n      [parameter(Mandatory=$false)]\n      [string]$OU,\n      [parameter(Mandatory=$true)]\n      [string]$Username,\n      [parameter(Mandatory=$true)]\n      [string]$Password,\n      [parameter(Mandatory=$true)]\n      [string]$Server\n  )\n  $adapter = Get-NetAdapter | ? {$_.Status -eq \"up\"}\n  $adapter | Set-DnsClientServerAddress -ServerAddresses $Server\n\n  if ($env:computername  -eq $env:userdomain) {\n    Write-Host \"Not in domain\"\n    $adminname = \"$Username\"\n    $adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$Password\"\n    Write-Host \"$adminname , $password\"\n    $credential = New-Object System.Management.Automation.PSCredential($adminname,$adminpassword)\n    Add-computer -DomainName $DomainName -Credential $credential -force -Options JoinWithNewName,AccountCreate -PassThru -ErrorAction Stop\n  } else {\n     Write-Host \"Already in domain\"\n  }\n}\n\nJointoDomain -DomainName $DOMAIN -Username $DOMAIN_USERNAME -Password $DOMAIN_PASSWORD -Server $AD_IP\n\nStart-Process -FilePath \"shutdown.exe\" -ArgumentList (\"/r\", \"/t\", \"5\")\nexit 0\n"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "DomainJoin",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "$DOMAIN = \"@@{DOMAIN}@@\"\n$DOMAIN_USERNAME = \"@@{DOMAIN_CRED.username}@@\"\n$DOMAIN_PASSWORD = \"@@{DOMAIN_CRED.secret}@@\"\n$AD_IP = \"@@{AD_IP}@@\"\n\nfunction JointoDomain {\n  [CmdletBinding()]\n  Param(\n      [parameter(Mandatory=$true)]\n      [string]$DomainName,\n      [parameter(Mandatory=$false)]\n      [string]$OU,\n      [parameter(Mandatory=$true)]\n      [string]$Username,\n      [parameter(Mandatory=$true)]\n      [string]$Password,\n      [parameter(Mandatory=$true)]\n      [string]$Server\n  )\n  $adapter = Get-NetAdapter | ? {$_.Status -eq \"up\"}\n  $adapter | Set-DnsClientServerAddress -ServerAddresses $Server\n\n  if ($env:computername  -eq $env:userdomain) {\n    Write-Host \"Not in domain\"\n    $adminname = \"$Username\"\n    $adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$Password\"\n    Write-Host \"$adminname , $password\"\n    $credential = New-Object System.Management.Automation.PSCredential($adminname,$adminpassword)\n    Add-computer -DomainName $DomainName -Credential $credential -force -Options JoinWithNewName,AccountCreate -PassThru -ErrorAction Stop\n  } else {\n     Write-Host \"Already in domain\"\n  }\n}\n\nJointoDomain -DomainName $DOMAIN -Username $DOMAIN_USERNAME -Password $DOMAIN_PASSWORD -Server $AD_IP\n\nStart-Process -FilePath \"shutdown.exe\" -ArgumentList (\"/r\", \"/t\", \"5\")\nexit 0\n",
        "script_type": "npsscript"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150021858984",
    "kind": "app_task",
    "uuid": "85b65e74-a66a-4a41-89fb-05371979a2d5",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150021858984",
    "name": "DomainJoin"
  }
}
