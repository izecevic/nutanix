{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "PcGetAdUserUuid",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "# region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     Bogdan-Nicolae.MITU@ext.eeas.europa.eu,\n# *             stephane.bourdeaud@nutanix.com\n# * version:    2019/10/18\n# task_name:    PcGetAdUserUuid\n# description:  Returns the Prism Central object uuid of the Calm user and its\n#               directory service.\n# output vars:  nutanix_calm_user_uuid, directory_uuid\n# endregion\n\n#region capture Calm variables\nusername = '@@{pc.username}@@'\nusername_secret = \"@@{pc.secret}@@\"\napi_server = \"@@{pc_ip}@@\"\nnutanix_calm_user_upn = \"@@{calm_username}@@\"\n# endregion\n\n# region prepare api call\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/users/list\"\nlength = 100\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\nfilter = \"user_principal_name=={}\".format(nutanix_calm_user_upn)\npayload = {\n    \"kind\":\"user\",\n    \"filter\": filter,\n    \"length\":length\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    print(\"Processing results from {} to {}\".format(json_resp['metadata']['offset'], json_resp['metadata']['length']))\n    for directory_user in json_resp['entities']:\n        nutanix_calm_user_uuid = directory_user['metadata']['uuid']\n        directory_uuid = directory_user['spec']['resources']['directory_service_user']['directory_service_reference']['uuid']\n        print(\"nutanix_calm_user_uuid={}\".format(nutanix_calm_user_uuid))\n        print(\"directory_uuid={}\".format(directory_uuid))\n    exit(0)\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "PcGetAdUserUuid",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "# region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     Bogdan-Nicolae.MITU@ext.eeas.europa.eu,\n# *             stephane.bourdeaud@nutanix.com\n# * version:    2019/10/18\n# task_name:    PcGetAdUserUuid\n# description:  Returns the Prism Central object uuid of the Calm user and its\n#               directory service.\n# output vars:  nutanix_calm_user_uuid, directory_uuid\n# endregion\n\n#region capture Calm variables\nusername = '@@{pc.username}@@'\nusername_secret = \"@@{pc.secret}@@\"\napi_server = \"@@{pc_ip}@@\"\nnutanix_calm_user_upn = \"@@{calm_username}@@\"\n# endregion\n\n# region prepare api call\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/users/list\"\nlength = 100\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\nfilter = \"user_principal_name=={}\".format(nutanix_calm_user_upn)\npayload = {\n    \"kind\":\"user\",\n    \"filter\": filter,\n    \"length\":length\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    print(\"Processing results from {} to {}\".format(json_resp['metadata']['offset'], json_resp['metadata']['length']))\n    for directory_user in json_resp['entities']:\n        nutanix_calm_user_uuid = directory_user['metadata']['uuid']\n        directory_uuid = directory_user['spec']['resources']['directory_service_user']['directory_service_reference']['uuid']\n        print(\"nutanix_calm_user_uuid={}\".format(nutanix_calm_user_uuid))\n        print(\"directory_uuid={}\".format(directory_uuid))\n    exit(0)\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150294189210",
    "kind": "app_task",
    "uuid": "fbc4b072-44ec-4176-b00d-20e88e5a30dc",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150294189210",
    "name": "PcGetAdUserUuid"
  }
}
