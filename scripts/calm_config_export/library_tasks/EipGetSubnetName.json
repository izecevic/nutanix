{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "EipGetSubnetName",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "#region headers\n# * authors:    igor.zecevic@nutanix.com\n# * date:       30/03/2020\n# task_name:    EipGetSubnets\n# description:  Get available networks attached to a site on EfficientIP\n# input vars:   eip_site_name, eip_min_free_ip\n# output vars:  subnet_lists\n#endregion\n\n# this script is used to retreive a list of available subnets on EIP\n# this list is provided during at the application launch using dynaminy variable\n# all print are commented\n\n#region capture Calm variables\nusername = \"@@{eip_username}@@\"\npassword = \"@@{eip_password}@@\"\napi_server = \"@@{eip_endpoint}@@\"\nsite_name = \"@@{eip_site_name}@@\"\nmin_free_ip = \"@@{eip_min_free_ip}@@\"\nis_terminal = \"1\"  #means that the subnet cannot contains others subnets as children\n#endregion\n\n# region prepare api call\napi_server_port = \"443\"\napi_server_endpoint = \"/rest\"\nmethod = \"GET\"\nbase_url = \"https://{}:{}{}\".format(api_server, api_server_port, api_server_endpoint)\nheaders = {'Content-Type': 'application/json', 'Accept': 'application/json'}\n# endregion\n\n#region API call function\ndef process_request(url, method, headers, payload=None):\n    if (payload is not None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth='BASIC', user=username, passwd=password, params=payload, verify=False, headers=headers)\n    if not r.ok:\n        print(\"Request failed\")\n        exit(1)\n    return r\n#endregion\n\n#region main processing\n# make the api call\nurl = \"{0}/ip_block_subnet_list?WHERE={1}='{2}'&WHERE={3}='{4}'\".format(base_url, \"is_terminal\", is_terminal, \"parent_site_name\", site_name)\n#print(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, headers)\n\n# parsing the response\nsubnets_list = []\nsubnets = json.loads(resp.content)\nfor subnet in subnets:\n  if subnet['subnet_ip_free_size'] != int(min_free_ip):\n      subnets_list.append(format(subnet['subnet_name']))\n\n# return array use for dynamic variable input           \nprint(\", \".join(subnets_list))\n#endregion"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "EipGetSubnetName",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "#region headers\n# * authors:    igor.zecevic@nutanix.com\n# * date:       30/03/2020\n# task_name:    EipGetSubnets\n# description:  Get available networks attached to a site on EfficientIP\n# input vars:   eip_site_name, eip_min_free_ip\n# output vars:  subnet_lists\n#endregion\n\n# this script is used to retreive a list of available subnets on EIP\n# this list is provided during at the application launch using dynaminy variable\n# all print are commented\n\n#region capture Calm variables\nusername = \"@@{eip_username}@@\"\npassword = \"@@{eip_password}@@\"\napi_server = \"@@{eip_endpoint}@@\"\nsite_name = \"@@{eip_site_name}@@\"\nmin_free_ip = \"@@{eip_min_free_ip}@@\"\nis_terminal = \"1\"  #means that the subnet cannot contains others subnets as children\n#endregion\n\n# region prepare api call\napi_server_port = \"443\"\napi_server_endpoint = \"/rest\"\nmethod = \"GET\"\nbase_url = \"https://{}:{}{}\".format(api_server, api_server_port, api_server_endpoint)\nheaders = {'Content-Type': 'application/json', 'Accept': 'application/json'}\n# endregion\n\n#region API call function\ndef process_request(url, method, headers, payload=None):\n    if (payload is not None):\n        payload = json.dumps(payload)\n    r = urlreq(url, verb=method, auth='BASIC', user=username, passwd=password, params=payload, verify=False, headers=headers)\n    if not r.ok:\n        print(\"Request failed\")\n        exit(1)\n    return r\n#endregion\n\n#region main processing\n# make the api call\nurl = \"{0}/ip_block_subnet_list?WHERE={1}='{2}'&WHERE={3}='{4}'\".format(base_url, \"is_terminal\", is_terminal, \"parent_site_name\", site_name)\n#print(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, headers)\n\n# parsing the response\nsubnets_list = []\nsubnets = json.loads(resp.content)\nfor subnet in subnets:\n  if subnet['subnet_ip_free_size'] != int(min_free_ip):\n      subnets_list.append(format(subnet['subnet_name']))\n\n# return array use for dynamic variable input           \nprint(\", \".join(subnets_list))\n#endregion",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150221552942",
    "kind": "app_task",
    "uuid": "c9c1ae8b-0feb-4819-b2a1-e8e473d85a7b",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150221552942",
    "name": "EipGetSubnetName"
  }
}
