{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "CalmSetProjectAcp",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "# region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     MITU Bogdan Nicolae (EEAS-EXT) <Bogdan-Nicolae.MITU@ext.eeas.europa.eu>\n# * version:    2019/09/17\n# task_name:    CalmSetProjectAcp\n# description:  Configures the Access Control Policy on a Calm project, which\n#               will effectively define user and group permissions on that \n#               project.\n# endregion\n\n#region capture Calm variables\nusername = \"@@{pc.username}@@\"\nusername_secret = \"@@{pc.secret}@@\"\napi_server = \"@@{pc_ip}@@\"\ncalm_user_uuid = \"@@{nutanix_calm_user_uuid}@@\"\ncalm_user_upn = \"@@{calm_username}@@\"\nad_group_name = \"@@{ad_group_name}@@\"\nad_group_uuid = \"@@{ad_group_uuid}@@\"\nad_group_dn = \"@@{ad_group_dn}@@\"\nproject_admin_role_uuid = \"@@{project_admin_role_uuid}@@\"\ndeveloper_role_uuid = \"@@{developer_role_uuid}@@\"\nconsumer_role_uuid = \"@@{consumer_role_uuid}@@\"\nproject_uuid = \"@@{project_uuid}@@\"\ndirectory_uuid = \"@@{directory_uuid}@@\"\nnutanix_cluster_uuid = \"@@{nutanix_cluster_uuid}@@\"\n#endregion\n\n#region prepare api call (get project)\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/projects_internal/{}\".format(project_uuid)\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"GET\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n#endregion\n\n#region make the api call (get project)\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    headers=headers,\n    verify=False\n)\n# endregion\n\n#region process the results (get project)\nif resp.ok:\n   print(\"Successfully retrieved project details for project with uuid {}\".format(project_uuid))\n   project_json = json.loads(resp.content)\nelse:\n    #api call failed\n    print(\"Request failed\")\n    print(\"Headers: {}\".format(headers))\n    print('Status code: {}'.format(resp.status_code))\n    print('Response: {}'.format(json.dumps(json.loads(resp.content), indent=4)))\n    exit(1)\n# endregion\n\n#region prepare api call (update project with acp)\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/projects_internal/{}\".format(project_uuid)\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"PUT\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\nif len(str(project_json['spec']['access_control_policy_list'])) > 2:\n    print \"ACP is not null\"\n    exit (1)\nelse:\n    print \"ACP is null\"\n    #removing stuff we don't need for the update\n    project_json['metadata'].pop('owner_reference', None)\n    project_json.pop('status', None)\n    project_json['metadata'].pop('create_time', None)\n    #region adding group information\n    add_acp_group = {\n                \"operation\": \"ADD\",\n                \"acp\": {\n                    \"name\": \"nuCalmAcp-\"+str(uuid.uuid4()),\n                    \"resources\": {\n                        \"role_reference\": {\n                            \"kind\": \"role\",\n                            \"uuid\": consumer_role_uuid\n                        },\n                        \"user_reference_list\": [],\n                        \"filter_list\": {\n                            \"context_list\": [\n                                {\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"ALL\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        }\n                                    ],\n                                    \"scope_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": \"PROJECT\",\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    project_uuid\n                                                ]\n                                            }\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"image\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"marketplace_item\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"app_icon\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"category\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"cluster\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    nutanix_cluster_uuid\n                                                ]\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        \"user_group_reference_list\": [\n                        {\n                            \"kind\": \"user_group\",\n                            \"uuid\": ad_group_uuid\n                        }\n                        ]\n                    },\n                    \"description\": \"ACPDescription-\"+str(uuid.uuid4())\n                },\n                \"metadata\": {\n                    \"kind\": \"access_control_policy\"\n                }\n            }\n    project_json['spec']['access_control_policy_list'].append(add_acp_group)\n    add_group = {\n        \"kind\": \"user_group\",\n        \"uuid\": ad_group_uuid\n    }\n    project_json['spec']['project_detail']['resources']['external_user_group_reference_list'].append(add_group)\n    spec_addgroup = {\n            \"metadata\": {\n                \"kind\": \"user_group\",\n                \"uuid\": ad_group_uuid\n            },\n            \"user_group\": {\n                \"resources\": {\n                    \"directory_service_user_group\": {\n                        \"distinguished_name\": ad_group_dn\n                    }\n                }\n            },\n            \"operation\": \"ADD\"\n    }\n    project_json['spec']['user_group_list'].append(spec_addgroup)\n    #endregion\n    #region adding user information\n    add_acp_user = {\n        \"operation\": \"ADD\",\n        \"acp\": {\n            \"name\": \"nuCalmAcp-\"+str(uuid.uuid4()),\n            \"resources\": {\n                \"role_reference\": {\n                    \"kind\": \"role\",\n                    \"uuid\": project_admin_role_uuid\n                },\n                \"user_reference_list\": [\n                    {\n                        \"kind\": \"user\",\n                        \"uuid\": calm_user_uuid\n                    }\n                ],\n                \"filter_list\": {\n                    \"context_list\": [\n                        {\n                            \"entity_filter_expression_list\": [\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"ALL\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                }\n                            ],\n                            \"scope_filter_expression_list\": [\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": \"PROJECT\",\n                                    \"right_hand_side\": {\n                                        \"uuid_list\": [\n                                            project_uuid\n                                        ]\n                                    }\n                                }\n                            ]\n                        },\n                        {\n                            \"entity_filter_expression_list\": [\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"image\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"marketplace_item\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"SELF_OWNED\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"app_icon\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"category\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"cluster\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"uuid_list\": [\n                                            nutanix_cluster_uuid\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"user_group_reference_list\": []\n            },\n            \"description\": \"ACPDescription-\"+str(uuid.uuid4())\n        },\n        \"metadata\": {\n            \"kind\": \"access_control_policy\"\n        }\n    }\n    project_json['spec']['access_control_policy_list'].append(add_acp_user)\n    add_user = {\n        \"kind\": \"user\",\n        \"uuid\": calm_user_uuid\n    }\n    project_json['spec']['project_detail']['resources']['user_reference_list'].append(add_user)\n    spec_adduser = {\n        \"metadata\": {\n            \"kind\": \"user\",\n            \"uuid\": calm_user_uuid\n        },\n        \"user\": {\n            \"resources\": {\n                \"directory_service_user\": {\n                    \"directory_service_reference\": {\n                        \"kind\": \"directory_service\",\n                        \"uuid\": directory_uuid\n                    },\n                    \"user_principal_name\": calm_user_upn\n                }\n            }\n        },\n        \"operation\": \"ADD\"\n    }\n    project_json['spec']['user_list'].append(spec_adduser)\n    #endregion\npayload = project_json\n#endregion\n\n#region make the api call (update project with acp)\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results (update project with acp)\nif resp.ok:\n    print(\"Successfully updated the project with uuid {}\".format(project_uuid))\n    exit(0)\nelse:\n    #api call failed\n    print(\"Request failed\")\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(json.dumps(payload)))\n    print('Status code: {}'.format(resp.status_code))\n    print('Response: {}'.format(json.dumps(json.loads(resp.content), indent=4)))\n    exit(1)\n#endregion"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "CalmSetProjectAcp",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "# region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     MITU Bogdan Nicolae (EEAS-EXT) <Bogdan-Nicolae.MITU@ext.eeas.europa.eu>\n# * version:    2019/09/17\n# task_name:    CalmSetProjectAcp\n# description:  Configures the Access Control Policy on a Calm project, which\n#               will effectively define user and group permissions on that \n#               project.\n# endregion\n\n#region capture Calm variables\nusername = \"@@{pc.username}@@\"\nusername_secret = \"@@{pc.secret}@@\"\napi_server = \"@@{pc_ip}@@\"\ncalm_user_uuid = \"@@{nutanix_calm_user_uuid}@@\"\ncalm_user_upn = \"@@{calm_username}@@\"\nad_group_name = \"@@{ad_group_name}@@\"\nad_group_uuid = \"@@{ad_group_uuid}@@\"\nad_group_dn = \"@@{ad_group_dn}@@\"\nproject_admin_role_uuid = \"@@{project_admin_role_uuid}@@\"\ndeveloper_role_uuid = \"@@{developer_role_uuid}@@\"\nconsumer_role_uuid = \"@@{consumer_role_uuid}@@\"\nproject_uuid = \"@@{project_uuid}@@\"\ndirectory_uuid = \"@@{directory_uuid}@@\"\nnutanix_cluster_uuid = \"@@{nutanix_cluster_uuid}@@\"\n#endregion\n\n#region prepare api call (get project)\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/projects_internal/{}\".format(project_uuid)\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"GET\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n#endregion\n\n#region make the api call (get project)\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    headers=headers,\n    verify=False\n)\n# endregion\n\n#region process the results (get project)\nif resp.ok:\n   print(\"Successfully retrieved project details for project with uuid {}\".format(project_uuid))\n   project_json = json.loads(resp.content)\nelse:\n    #api call failed\n    print(\"Request failed\")\n    print(\"Headers: {}\".format(headers))\n    print('Status code: {}'.format(resp.status_code))\n    print('Response: {}'.format(json.dumps(json.loads(resp.content), indent=4)))\n    exit(1)\n# endregion\n\n#region prepare api call (update project with acp)\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/projects_internal/{}\".format(project_uuid)\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"PUT\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\nif len(str(project_json['spec']['access_control_policy_list'])) > 2:\n    print \"ACP is not null\"\n    exit (1)\nelse:\n    print \"ACP is null\"\n    #removing stuff we don't need for the update\n    project_json['metadata'].pop('owner_reference', None)\n    project_json.pop('status', None)\n    project_json['metadata'].pop('create_time', None)\n    #region adding group information\n    add_acp_group = {\n                \"operation\": \"ADD\",\n                \"acp\": {\n                    \"name\": \"nuCalmAcp-\"+str(uuid.uuid4()),\n                    \"resources\": {\n                        \"role_reference\": {\n                            \"kind\": \"role\",\n                            \"uuid\": consumer_role_uuid\n                        },\n                        \"user_reference_list\": [],\n                        \"filter_list\": {\n                            \"context_list\": [\n                                {\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"ALL\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        }\n                                    ],\n                                    \"scope_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": \"PROJECT\",\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    project_uuid\n                                                ]\n                                            }\n                                        }\n                                    ]\n                                },\n                                {\n                                    \"entity_filter_expression_list\": [\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"image\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"marketplace_item\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"SELF_OWNED\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"app_icon\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"category\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"collection\": \"ALL\"\n                                            }\n                                        },\n                                        {\n                                            \"operator\": \"IN\",\n                                            \"left_hand_side\": {\n                                                \"entity_type\": \"cluster\"\n                                            },\n                                            \"right_hand_side\": {\n                                                \"uuid_list\": [\n                                                    nutanix_cluster_uuid\n                                                ]\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        \"user_group_reference_list\": [\n                        {\n                            \"kind\": \"user_group\",\n                            \"uuid\": ad_group_uuid\n                        }\n                        ]\n                    },\n                    \"description\": \"ACPDescription-\"+str(uuid.uuid4())\n                },\n                \"metadata\": {\n                    \"kind\": \"access_control_policy\"\n                }\n            }\n    project_json['spec']['access_control_policy_list'].append(add_acp_group)\n    add_group = {\n        \"kind\": \"user_group\",\n        \"uuid\": ad_group_uuid\n    }\n    project_json['spec']['project_detail']['resources']['external_user_group_reference_list'].append(add_group)\n    spec_addgroup = {\n            \"metadata\": {\n                \"kind\": \"user_group\",\n                \"uuid\": ad_group_uuid\n            },\n            \"user_group\": {\n                \"resources\": {\n                    \"directory_service_user_group\": {\n                        \"distinguished_name\": ad_group_dn\n                    }\n                }\n            },\n            \"operation\": \"ADD\"\n    }\n    project_json['spec']['user_group_list'].append(spec_addgroup)\n    #endregion\n    #region adding user information\n    add_acp_user = {\n        \"operation\": \"ADD\",\n        \"acp\": {\n            \"name\": \"nuCalmAcp-\"+str(uuid.uuid4()),\n            \"resources\": {\n                \"role_reference\": {\n                    \"kind\": \"role\",\n                    \"uuid\": project_admin_role_uuid\n                },\n                \"user_reference_list\": [\n                    {\n                        \"kind\": \"user\",\n                        \"uuid\": calm_user_uuid\n                    }\n                ],\n                \"filter_list\": {\n                    \"context_list\": [\n                        {\n                            \"entity_filter_expression_list\": [\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"ALL\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                }\n                            ],\n                            \"scope_filter_expression_list\": [\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": \"PROJECT\",\n                                    \"right_hand_side\": {\n                                        \"uuid_list\": [\n                                            project_uuid\n                                        ]\n                                    }\n                                }\n                            ]\n                        },\n                        {\n                            \"entity_filter_expression_list\": [\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"image\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"marketplace_item\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"SELF_OWNED\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"app_icon\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"category\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"collection\": \"ALL\"\n                                    }\n                                },\n                                {\n                                    \"operator\": \"IN\",\n                                    \"left_hand_side\": {\n                                        \"entity_type\": \"cluster\"\n                                    },\n                                    \"right_hand_side\": {\n                                        \"uuid_list\": [\n                                            nutanix_cluster_uuid\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"user_group_reference_list\": []\n            },\n            \"description\": \"ACPDescription-\"+str(uuid.uuid4())\n        },\n        \"metadata\": {\n            \"kind\": \"access_control_policy\"\n        }\n    }\n    project_json['spec']['access_control_policy_list'].append(add_acp_user)\n    add_user = {\n        \"kind\": \"user\",\n        \"uuid\": calm_user_uuid\n    }\n    project_json['spec']['project_detail']['resources']['user_reference_list'].append(add_user)\n    spec_adduser = {\n        \"metadata\": {\n            \"kind\": \"user\",\n            \"uuid\": calm_user_uuid\n        },\n        \"user\": {\n            \"resources\": {\n                \"directory_service_user\": {\n                    \"directory_service_reference\": {\n                        \"kind\": \"directory_service\",\n                        \"uuid\": directory_uuid\n                    },\n                    \"user_principal_name\": calm_user_upn\n                }\n            }\n        },\n        \"operation\": \"ADD\"\n    }\n    project_json['spec']['user_list'].append(spec_adduser)\n    #endregion\npayload = project_json\n#endregion\n\n#region make the api call (update project with acp)\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results (update project with acp)\nif resp.ok:\n    print(\"Successfully updated the project with uuid {}\".format(project_uuid))\n    exit(0)\nelse:\n    #api call failed\n    print(\"Request failed\")\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(json.dumps(payload)))\n    print('Status code: {}'.format(resp.status_code))\n    print('Response: {}'.format(json.dumps(json.loads(resp.content), indent=4)))\n    exit(1)\n#endregion",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150170195537",
    "kind": "app_task",
    "uuid": "9f2b0306-4b42-438d-a8e5-64dad0b03f58",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150170195537",
    "name": "CalmSetProjectAcp"
  }
}
