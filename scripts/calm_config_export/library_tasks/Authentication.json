{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "Authentication",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "#script\n# region headers\n# * author:     salaheddine.gassim@nutanix.com\n# * version:    14082019\n# task_name:    Authentication\n# description:  this task is used to authenticate again the Avi controller\n# endregion\ncontroller_url = \"@@{CONTROLLER_URL}@@\"\navi_username = \"@@{avi.username}@@\"\navi_password = \"@@{avi.secret}@@\"\n\n\ndef avi_login(controller_url,avi_username,avi_password):\n    \"\"\" This function return two elements, the csrftoken and sessionid to be used later \n        Args:\n         controller_url: http://avi_controller_ip\n         login: avi controller username\n         password: avi controller password\n\t\tReturns:\n\t\t CSRF_TOKEN: to be used with other api call\n\t\t SESSION_ID: to be used with other api call\n    \n    \"\"\"\n    \n    login_url = controller_url + \"/login\"\n    h_referer = \"@@{REFERER}@@\"\n    h_api_version = \"@@{API_VERSION}@@\"\n\t\n    # setting up the headers and payload for the request\n    login_payload = \"-----CALM\\r\\n\" \\\n        \"Content-Disposition: form-data; name=\\\"username\\\"\\r\\n\\r\\n\" + avi_username +\"\\r\\n\" \\\n        \"-----CALM\\r\\n\" \\\n        \"Content-Disposition: form-data; name=\\\"password\\\"\\r\\n\\r\\n\" + avi_password +\"\\r\\n\" \\\n        \"-----CALM--\\r\\n\"\n    headers = {\n        'content-type': \"multipart/form-data; boundary=---CALM\",\n        'X-Avi-Version': h_api_version,\n        'Referer': h_referer\n        }\n    # endregion\n\t\n    response = urlreq(login_url, verb='POST', params=login_payload, headers=headers, verify=False)\n    \n    # deal with the result/response\n    if response.ok:\n        print \"Successfully authenticated\"\n        print \"CSRF_TOKEN={}\".format(response.cookies.get('csrftoken'))\n        print \"SESSION_ID={}\".format(response.cookies.get('sessionid'))       \n        \n    else:\n        print(\"Request failed\")\n        print(\"Headers: {}\".format(headers))\n        print(\"Payload: {}\".format(login_payload))\n        print('Status code: {}'.format(response.status_code))\n        print('Response: {}'.format(response.text))\n        exit(1)\n    \n    # endregion\navi_login(controller_url,avi_username,avi_password)\n\n    \n"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "Authentication",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "#script\n# region headers\n# * author:     salaheddine.gassim@nutanix.com\n# * version:    14082019\n# task_name:    Authentication\n# description:  this task is used to authenticate again the Avi controller\n# endregion\ncontroller_url = \"@@{CONTROLLER_URL}@@\"\navi_username = \"@@{avi.username}@@\"\navi_password = \"@@{avi.secret}@@\"\n\n\ndef avi_login(controller_url,avi_username,avi_password):\n    \"\"\" This function return two elements, the csrftoken and sessionid to be used later \n        Args:\n         controller_url: http://avi_controller_ip\n         login: avi controller username\n         password: avi controller password\n\t\tReturns:\n\t\t CSRF_TOKEN: to be used with other api call\n\t\t SESSION_ID: to be used with other api call\n    \n    \"\"\"\n    \n    login_url = controller_url + \"/login\"\n    h_referer = \"@@{REFERER}@@\"\n    h_api_version = \"@@{API_VERSION}@@\"\n\t\n    # setting up the headers and payload for the request\n    login_payload = \"-----CALM\\r\\n\" \\\n        \"Content-Disposition: form-data; name=\\\"username\\\"\\r\\n\\r\\n\" + avi_username +\"\\r\\n\" \\\n        \"-----CALM\\r\\n\" \\\n        \"Content-Disposition: form-data; name=\\\"password\\\"\\r\\n\\r\\n\" + avi_password +\"\\r\\n\" \\\n        \"-----CALM--\\r\\n\"\n    headers = {\n        'content-type': \"multipart/form-data; boundary=---CALM\",\n        'X-Avi-Version': h_api_version,\n        'Referer': h_referer\n        }\n    # endregion\n\t\n    response = urlreq(login_url, verb='POST', params=login_payload, headers=headers, verify=False)\n    \n    # deal with the result/response\n    if response.ok:\n        print \"Successfully authenticated\"\n        print \"CSRF_TOKEN={}\".format(response.cookies.get('csrftoken'))\n        print \"SESSION_ID={}\".format(response.cookies.get('sessionid'))       \n        \n    else:\n        print(\"Request failed\")\n        print(\"Headers: {}\".format(headers))\n        print(\"Payload: {}\".format(login_payload))\n        print('Status code: {}'.format(response.status_code))\n        print('Response: {}'.format(response.text))\n        exit(1)\n    \n    # endregion\navi_login(controller_url,avi_username,avi_password)\n\n    \n",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150131247194",
    "kind": "app_task",
    "uuid": "1d7b74b4-1c69-4aac-816f-24a56505cdc2",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150131247194",
    "name": "Authentication"
  }
}
