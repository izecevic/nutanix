{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "PcGetAdGroup",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "#region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     Bogdan-Nicolae.MITU@ext.eeas.europa.eu,\n# *             stephane.bourdeaud@nutanix.com\n# * version:    2019/09/17\n# task_name:    PcGetAdGroup\n# description:  Given an AD group, return information from the directory.\n# output vars:  ad_group_name,ad_group_dn\n# endregion\n\n#region capture Calm variables\nusername = '@@{pc.username}@@'\nusername_secret = \"@@{pc.secret}@@\"\napi_server = \"@@{pc_ip}@@\"\nproject_vlan_id = \"@@{project_vlan_id}@@\"\ndirectory_uuid = \"@@{directory_uuid}@@\"\n#endregion\n\n#region define variables\nad_group_name = \"NUT_EEAS_R_TLAB{}Admins\".format(project_vlan_id)\n#endregion\n\n# region prepare api call\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/directory_services/{}/search\".format(directory_uuid)\nlength = 100\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\npayload = {\n    \"query\":ad_group_name,\n    \"returned_attribute_list\":[\n        \"memberOf\",\n        \"member\",\n        \"userPrincipalName\",\n        \"distinguishedName\"\n    ],\n    \"searched_attribute_list\":[\n        \"name\",\n        \"userPrincipalName\",\n        \"distinguishedName\"\n    ]\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    if len(json_resp['search_result_list']) == 0:\n        print(\"The Active Directory group {} does not exist.\".format(ad_group_name))\n        exit(1)\n    else:\n        print(\"The Active Directory group {} exists.\".format(ad_group_name))\n        ad_group_dn = json_resp['search_result_list'][0]['attribute_list'][0]['value_list'][0]\n        print(\"ad_group_name={}\".format(ad_group_name))\n        print(\"ad_group_dn={}\".format(ad_group_dn))\n        exit(0)\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "PcGetAdGroup",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "#region headers\n# escript-template v20190611 / stephane.bourdeaud@nutanix.com\n# * author:     Bogdan-Nicolae.MITU@ext.eeas.europa.eu,\n# *             stephane.bourdeaud@nutanix.com\n# * version:    2019/09/17\n# task_name:    PcGetAdGroup\n# description:  Given an AD group, return information from the directory.\n# output vars:  ad_group_name,ad_group_dn\n# endregion\n\n#region capture Calm variables\nusername = '@@{pc.username}@@'\nusername_secret = \"@@{pc.secret}@@\"\napi_server = \"@@{pc_ip}@@\"\nproject_vlan_id = \"@@{project_vlan_id}@@\"\ndirectory_uuid = \"@@{directory_uuid}@@\"\n#endregion\n\n#region define variables\nad_group_name = \"NUT_EEAS_R_TLAB{}Admins\".format(project_vlan_id)\n#endregion\n\n# region prepare api call\napi_server_port = \"9440\"\napi_server_endpoint = \"/api/nutanix/v3/directory_services/{}/search\".format(directory_uuid)\nlength = 100\nurl = \"https://{}:{}{}\".format(\n    api_server,\n    api_server_port,\n    api_server_endpoint\n)\nmethod = \"POST\"\nheaders = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\npayload = {\n    \"query\":ad_group_name,\n    \"returned_attribute_list\":[\n        \"memberOf\",\n        \"member\",\n        \"userPrincipalName\",\n        \"distinguishedName\"\n    ],\n    \"searched_attribute_list\":[\n        \"name\",\n        \"userPrincipalName\",\n        \"distinguishedName\"\n    ]\n}\n# endregion\n\n#region make the api call\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = urlreq(\n    url,\n    verb=method,\n    auth='BASIC',\n    user=username,\n    passwd=username_secret,\n    params=json.dumps(payload),\n    headers=headers,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    if len(json_resp['search_result_list']) == 0:\n        print(\"The Active Directory group {} does not exist.\".format(ad_group_name))\n        exit(1)\n    else:\n        print(\"The Active Directory group {} exists.\".format(ad_group_name))\n        ad_group_dn = json_resp['search_result_list'][0]['attribute_list'][0]['value_list'][0]\n        print(\"ad_group_name={}\".format(ad_group_name))\n        print(\"ad_group_dn={}\".format(ad_group_dn))\n        exit(0)\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150292269267",
    "kind": "app_task",
    "uuid": "32d3227a-a8f0-487b-893c-579eece8cc73",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150292269267",
    "name": "PcGetAdGroup"
  }
}
