{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "ConfigSet_Install_and_Configure",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "#!/bin/bash\nset -ex\n\n##  Variable Initialization\nPROFILE=\"@@{PROFILE}@@\"\nVERSION=\"@@{MONGO_VERSION}@@\"\nDATA_PATH=\"@@{DATA_PATH}@@\"\nJOURNAL_PATH=\"@@{JOURNAL_PATH}@@\"\nLOG_PATH=\"@@{LOG_PATH}@@\"\n\n\n## Getting data ip and router ip addresses\nif [ \"x${PROFILE}\" = \"xAHV\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_address}@@\"\n  DATA_IP_LIST=\"@@{AHVDataSet.address}@@\"\n  ROUTER_IP_LIST=\"@@{AHVRouter.address}@@\"\n  CONFIG_SRV_IPS=\"@@{calm_array_address}@@\"\n\tINTERNAL_IP=\"@@{address}@@\"\nelif [ \"x${PROFILE}\" = \"xAWS\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_private_ip_address}@@\"\n  DATA_IP_LIST=\"@@{AWSDataSet.private_ip_address}@@\"\n  ROUTER_IP_LIST=\"@@{AWSRouter.private_ip_address}@@\"\n  CONFIG_SRV_IPS=\"@@{calm_array_private_ip_address}@@\"\n\tINTERNAL_IP=\"@@{private_ip_address}@@\"    \nelif [ \"x${PROFILE}\" = \"xGCP\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_private_ip_address}@@\"\n  DATA_IP_LIST=\"@@{GCPDataSet.private_ip_address}@@\"\n  ROUTER_IP_LIST=\"@@{GCPRouter.private_ip_address}@@\" \n  CONFIG_SRV_IPS=\"@@{calm_array_private_ip_address}@@\"\n\tINTERNAL_IP=\"@@{private_ip_address}@@\"    \nelif [ \"x${PROFILE}\" = \"xAZURE\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_private_ip_address}@@\"\n  DATA_IP_LIST=\"@@{AzureDataSet.private_ip_address}@@\"\n  ROUTER_IP_LIST=\"@@{AzureRouter.private_ip_address}@@\" \n  CONFIG_SRV_IPS=\"@@{calm_array_private_ip_address}@@\"\n\tINTERNAL_IP=\"@@{private_ip_address}@@\"    \nelif [ \"x${PROFILE}\" = \"xVMWARE\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_address}@@\"\n  DATA_IP_LIST=\"@@{VMwareDataSet.address}@@\"\n  ROUTER_IP_LIST=\"@@{VMwareRouter.address}@@\"\n  CONFIG_SRV_IPS=\"@@{calm_array_address}@@\"\n\tINTERNAL_IP=\"@@{address}@@\"    \nfi\n\n## Setup hostname\nsudo hostnamectl set-hostname --static @@{name}@@\n\ncat > /tmp/set-hostnames.py <<EOF\n#!/usr/bin/python\nimport re\nconfig_ips=\"${CONFIG_IP_LIST}\"\ndata_ips=\"${DATA_IP_LIST}\"\nrouter_ips=\"${ROUTER_IP_LIST}\"\n\nhostfile = open('/etc/hosts', 'r').read()\nprint hostfile\nhostfile = re.sub('\\n#MONGODB-BEGIN.*?#MONGODB-END', '', hostfile, flags=re.DOTALL)\nhostfile += \"#MONGODB-BEGIN\\n\"\ncount=1\nfor ip in config_ips.split(','):\n  hostfile += ip + \" config\" + str(count) + \".mongodb\\n\"\n  count += 1\ncount=1\nfor ip in data_ips.split(','):\n  hostfile += ip + \" data\" + str(count) + \".mongodb\\n\"\n  count += 1\ncount=1\nfor ip in router_ips.split(','):\n  hostfile += ip + \" router\" + str(count) + \".mongodb\\n\"\n  count += 1\nhostfile += \"#MONGODB-END\\n\"\nopen('/etc/hosts', 'w').write(hostfile)\nEOF\n\nsudo python /tmp/set-hostnames.py\n\n## Disable  SELinux\nsudo sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux\nsudo sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsudo setenforce 0\n\n## Configure yum repo for mongodb\necho '[mongodb-org-3.4]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc' | sudo tee /etc/yum.repos.d/mongodb-3.4.repo\n\n## Install MongoDB\nsudo yum update -y --quiet\nsudo yum install -y --quiet mongodb-org-${VERSION} mongodb-org-server-${VERSION} mongodb-org-shell-${VERSION} mongodb-org-mongos-${VERSION} mongodb-org-tools-${VERSION}\n\necho 'exclude=mongodb-org*' | sudo tee -a /etc/yum.conf\n\nsudo mkdir -p ${DATA_PATH} ${JOURNAL_PATH} ${LOG_PATH}\nsudo ln -s ${JOURNAL_PATH} ${DATA_PATH}/journal\nsudo chown -R mongod:mongod ${DATA_PATH} ${JOURNAL_PATH} ${LOG_PATH}\n\n## Setting up mongod conf\nsudo sed -i 's/bindIp:/#bindIp:/g' /etc/mongod.conf\nsudo sed -i \"s#/var/lib/mongo#${DATA_PATH}#g\" /etc/mongod.conf\nsudo sed -i 's/#sharding:/sharding:\\n  clusterRole: configsvr/g' /etc/mongod.conf\nsudo sed -i 's/#replication:/replication:\\n  replSetName: configReplSet/g' /etc/mongod.conf\n\n## Generating config replica set\nconfig_ips=$(echo \"${CONFIG_SRV_IPS}\" | sed 's/^,//' | sed 's/,$//' | tr \",\" \"\\n\")\nconfig_cnt=0\nconfig_str=\"\"\n\nfor config in $config_ips\ndo\n  config_str=$config_str\"{\\\"_id\\\": $config_cnt, host:\\\"$config:27017\\\"},\"\n  config_cnt=$(($config_cnt + 1))\ndone\nconfig_str=`echo $config_str | sed 's/,$//'`\njson=$(cat <<EOF\n{\n  \"_id\": \"configReplSet\",\n  \"members\": [\n    $config_str\n  ]\n}\nEOF\n)\n\n## Setting sysctl params\nif [[ -f /sys/kernel/mm/transparent_hugepage/enabled ]];then\n\techo never | sudo tee /sys/kernel/mm/transparent_hugepage/enabled\nfi\nif [[ -f /sys/kernel/mm/transparent_hugepage/defrag ]];then\n\techo never | sudo tee /sys/kernel/mm/transparent_hugepage/defrag\nfi\n\n## Enable and restart mongod service\nsudo systemctl restart mongod\nsudo systemctl enable mongod\nsleep 15\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\n## Initializing Config Replica Set\nsudo mongo --host ${INTERNAL_IP} --port 27017 --eval \"rs.initiate( $json )\"\nsleep 2\n"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "ConfigSet_Install_and_Configure",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "#!/bin/bash\nset -ex\n\n##  Variable Initialization\nPROFILE=\"@@{PROFILE}@@\"\nVERSION=\"@@{MONGO_VERSION}@@\"\nDATA_PATH=\"@@{DATA_PATH}@@\"\nJOURNAL_PATH=\"@@{JOURNAL_PATH}@@\"\nLOG_PATH=\"@@{LOG_PATH}@@\"\n\n\n## Getting data ip and router ip addresses\nif [ \"x${PROFILE}\" = \"xAHV\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_address}@@\"\n  DATA_IP_LIST=\"@@{AHVDataSet.address}@@\"\n  ROUTER_IP_LIST=\"@@{AHVRouter.address}@@\"\n  CONFIG_SRV_IPS=\"@@{calm_array_address}@@\"\n\tINTERNAL_IP=\"@@{address}@@\"\nelif [ \"x${PROFILE}\" = \"xAWS\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_private_ip_address}@@\"\n  DATA_IP_LIST=\"@@{AWSDataSet.private_ip_address}@@\"\n  ROUTER_IP_LIST=\"@@{AWSRouter.private_ip_address}@@\"\n  CONFIG_SRV_IPS=\"@@{calm_array_private_ip_address}@@\"\n\tINTERNAL_IP=\"@@{private_ip_address}@@\"    \nelif [ \"x${PROFILE}\" = \"xGCP\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_private_ip_address}@@\"\n  DATA_IP_LIST=\"@@{GCPDataSet.private_ip_address}@@\"\n  ROUTER_IP_LIST=\"@@{GCPRouter.private_ip_address}@@\" \n  CONFIG_SRV_IPS=\"@@{calm_array_private_ip_address}@@\"\n\tINTERNAL_IP=\"@@{private_ip_address}@@\"    \nelif [ \"x${PROFILE}\" = \"xAZURE\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_private_ip_address}@@\"\n  DATA_IP_LIST=\"@@{AzureDataSet.private_ip_address}@@\"\n  ROUTER_IP_LIST=\"@@{AzureRouter.private_ip_address}@@\" \n  CONFIG_SRV_IPS=\"@@{calm_array_private_ip_address}@@\"\n\tINTERNAL_IP=\"@@{private_ip_address}@@\"    \nelif [ \"x${PROFILE}\" = \"xVMWARE\" ]\nthen\n\tCONFIG_IP_LIST=\"@@{calm_array_address}@@\"\n  DATA_IP_LIST=\"@@{VMwareDataSet.address}@@\"\n  ROUTER_IP_LIST=\"@@{VMwareRouter.address}@@\"\n  CONFIG_SRV_IPS=\"@@{calm_array_address}@@\"\n\tINTERNAL_IP=\"@@{address}@@\"    \nfi\n\n## Setup hostname\nsudo hostnamectl set-hostname --static @@{name}@@\n\ncat > /tmp/set-hostnames.py <<EOF\n#!/usr/bin/python\nimport re\nconfig_ips=\"${CONFIG_IP_LIST}\"\ndata_ips=\"${DATA_IP_LIST}\"\nrouter_ips=\"${ROUTER_IP_LIST}\"\n\nhostfile = open('/etc/hosts', 'r').read()\nprint hostfile\nhostfile = re.sub('\\n#MONGODB-BEGIN.*?#MONGODB-END', '', hostfile, flags=re.DOTALL)\nhostfile += \"#MONGODB-BEGIN\\n\"\ncount=1\nfor ip in config_ips.split(','):\n  hostfile += ip + \" config\" + str(count) + \".mongodb\\n\"\n  count += 1\ncount=1\nfor ip in data_ips.split(','):\n  hostfile += ip + \" data\" + str(count) + \".mongodb\\n\"\n  count += 1\ncount=1\nfor ip in router_ips.split(','):\n  hostfile += ip + \" router\" + str(count) + \".mongodb\\n\"\n  count += 1\nhostfile += \"#MONGODB-END\\n\"\nopen('/etc/hosts', 'w').write(hostfile)\nEOF\n\nsudo python /tmp/set-hostnames.py\n\n## Disable  SELinux\nsudo sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux\nsudo sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsudo setenforce 0\n\n## Configure yum repo for mongodb\necho '[mongodb-org-3.4]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc' | sudo tee /etc/yum.repos.d/mongodb-3.4.repo\n\n## Install MongoDB\nsudo yum update -y --quiet\nsudo yum install -y --quiet mongodb-org-${VERSION} mongodb-org-server-${VERSION} mongodb-org-shell-${VERSION} mongodb-org-mongos-${VERSION} mongodb-org-tools-${VERSION}\n\necho 'exclude=mongodb-org*' | sudo tee -a /etc/yum.conf\n\nsudo mkdir -p ${DATA_PATH} ${JOURNAL_PATH} ${LOG_PATH}\nsudo ln -s ${JOURNAL_PATH} ${DATA_PATH}/journal\nsudo chown -R mongod:mongod ${DATA_PATH} ${JOURNAL_PATH} ${LOG_PATH}\n\n## Setting up mongod conf\nsudo sed -i 's/bindIp:/#bindIp:/g' /etc/mongod.conf\nsudo sed -i \"s#/var/lib/mongo#${DATA_PATH}#g\" /etc/mongod.conf\nsudo sed -i 's/#sharding:/sharding:\\n  clusterRole: configsvr/g' /etc/mongod.conf\nsudo sed -i 's/#replication:/replication:\\n  replSetName: configReplSet/g' /etc/mongod.conf\n\n## Generating config replica set\nconfig_ips=$(echo \"${CONFIG_SRV_IPS}\" | sed 's/^,//' | sed 's/,$//' | tr \",\" \"\\n\")\nconfig_cnt=0\nconfig_str=\"\"\n\nfor config in $config_ips\ndo\n  config_str=$config_str\"{\\\"_id\\\": $config_cnt, host:\\\"$config:27017\\\"},\"\n  config_cnt=$(($config_cnt + 1))\ndone\nconfig_str=`echo $config_str | sed 's/,$//'`\njson=$(cat <<EOF\n{\n  \"_id\": \"configReplSet\",\n  \"members\": [\n    $config_str\n  ]\n}\nEOF\n)\n\n## Setting sysctl params\nif [[ -f /sys/kernel/mm/transparent_hugepage/enabled ]];then\n\techo never | sudo tee /sys/kernel/mm/transparent_hugepage/enabled\nfi\nif [[ -f /sys/kernel/mm/transparent_hugepage/defrag ]];then\n\techo never | sudo tee /sys/kernel/mm/transparent_hugepage/defrag\nfi\n\n## Enable and restart mongod service\nsudo systemctl restart mongod\nsudo systemctl enable mongod\nsleep 15\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\n## Initializing Config Replica Set\nsudo mongo --host ${INTERNAL_IP} --port 27017 --eval \"rs.initiate( $json )\"\nsleep 2\n",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150030179449",
    "kind": "app_task",
    "uuid": "4579778a-227d-499d-8890-456fc0d6cbda",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150030179449",
    "name": "ConfigSet_Install_and_Configure"
  }
}
