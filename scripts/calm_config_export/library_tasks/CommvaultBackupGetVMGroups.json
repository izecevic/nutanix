{
  "status": {
    "state": "ACTIVE",
    "message_list": [],
    "name": "CommvaultBackupGetVMGroups",
    "resources": {
      "project_reference_list": [
        {
          "kind": "project",
          "uuid": "d64d5488-1f58-423c-b176-5c8b871f25a4",
          "name": "alain_client1"
        }
      ],
      "type": "EXEC",
      "attrs": {
        "script_type": "static",
        "type": "",
        "command_line_args": "",
        "exit_status": [],
        "script": "# region headers\n# escript-template v20190605 / stephane.bourdeaud@nutanix.com\n# * author:     jose.gomez@nutanix.com\n# * version:    20211207\n# task_type:    Application Profile Escript variable\n# task_name:    CV_VM_GROUP\n# description:  List the Commvault VM Groups available\n# endregion\n\n#region capture Calm variables\nUSERNAME = \"@@{USERNAME}@@\"\nPASSWORD = \"@@{PASSWORD}@@\"\nSERVER_IP = \"@@{SERVER_IP}@@\"\nCLIENT_NAME = \"@@{CLIENT_NAME}@@\"\nTIMEOUT = 30 # In minutes\n#endregion\n\n### DO NOT CHANGE AFTER THIS\n\n# region prepare api call\nAPI_URL = \"https://{}/webconsole/api\".format(SERVER_IP)\n\nSEPARATOR = \"/\"\n\nHEADERS = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\nPAYLOAD = {\n  \"password\": PASSWORD,\n  \"username\": USERNAME,\n  \"timeout\" : TIMEOUT\n}\n# endregion\n\n#region make the api call\nMETHOD = \"POST\"\nOPERATION = \"Login\"\nURL = SEPARATOR.join([API_URL,OPERATION])\n\nresp = urlreq(\n    URL,\n    verb=METHOD,\n    params=json.dumps(PAYLOAD),\n    headers=HEADERS,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    HEADERS[\"Authtoken\"] = json_resp[\"token\"]\nelse:\n    exit(1)\n# endregion\n\n#region make the api call\nMETHOD = \"GET\"\nOPERATION = \"v2/vsa/vmgroups?clientName={}\".format(CLIENT_NAME)\nURL = SEPARATOR.join([API_URL,OPERATION])\n\nresp = urlreq(\n    URL,\n    verb=METHOD,\n    headers=HEADERS,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    vm_groups = json_resp[\"vmGroupInfo\"]\nelse:\n    exit(1)\n# endregion\n\nvm_groups_list = []\n\nfor group in vm_groups:\n    if group[\"vmGroupEntity\"][\"subclientName\"] != \"default\":\n        group_details = group[\"vmGroupEntity\"]\n        id = group_details[\"subclientId\"]\n        name = group_details[\"subclientName\"]\n        group_tuple = (\"{} (id={})\".format(name,id))\n        vm_groups_list.append(group_tuple)\n\nprint(\",\".join(map(str,vm_groups_list)))"
      },
      "variable_list": []
    },
    "description": ""
  },
  "spec": {
    "name": "CommvaultBackupGetVMGroups",
    "resources": {
      "type": "EXEC",
      "attrs": {
        "script": "# region headers\n# escript-template v20190605 / stephane.bourdeaud@nutanix.com\n# * author:     jose.gomez@nutanix.com\n# * version:    20211207\n# task_type:    Application Profile Escript variable\n# task_name:    CV_VM_GROUP\n# description:  List the Commvault VM Groups available\n# endregion\n\n#region capture Calm variables\nUSERNAME = \"@@{USERNAME}@@\"\nPASSWORD = \"@@{PASSWORD}@@\"\nSERVER_IP = \"@@{SERVER_IP}@@\"\nCLIENT_NAME = \"@@{CLIENT_NAME}@@\"\nTIMEOUT = 30 # In minutes\n#endregion\n\n### DO NOT CHANGE AFTER THIS\n\n# region prepare api call\nAPI_URL = \"https://{}/webconsole/api\".format(SERVER_IP)\n\nSEPARATOR = \"/\"\n\nHEADERS = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n}\n\n# Compose the json payload\nPAYLOAD = {\n  \"password\": PASSWORD,\n  \"username\": USERNAME,\n  \"timeout\" : TIMEOUT\n}\n# endregion\n\n#region make the api call\nMETHOD = \"POST\"\nOPERATION = \"Login\"\nURL = SEPARATOR.join([API_URL,OPERATION])\n\nresp = urlreq(\n    URL,\n    verb=METHOD,\n    params=json.dumps(PAYLOAD),\n    headers=HEADERS,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    HEADERS[\"Authtoken\"] = json_resp[\"token\"]\nelse:\n    exit(1)\n# endregion\n\n#region make the api call\nMETHOD = \"GET\"\nOPERATION = \"v2/vsa/vmgroups?clientName={}\".format(CLIENT_NAME)\nURL = SEPARATOR.join([API_URL,OPERATION])\n\nresp = urlreq(\n    URL,\n    verb=METHOD,\n    headers=HEADERS,\n    verify=False\n)\n#endregion\n\n#region process the results\nif resp.ok:\n    json_resp = json.loads(resp.content)\n    vm_groups = json_resp[\"vmGroupInfo\"]\nelse:\n    exit(1)\n# endregion\n\nvm_groups_list = []\n\nfor group in vm_groups:\n    if group[\"vmGroupEntity\"][\"subclientName\"] != \"default\":\n        group_details = group[\"vmGroupEntity\"]\n        id = group_details[\"subclientId\"]\n        name = group_details[\"subclientName\"]\n        group_tuple = (\"{} (id={})\".format(name,id))\n        vm_groups_list.append(group_tuple)\n\nprint(\",\".join(map(str,vm_groups_list)))",
        "script_type": "static"
      },
      "variable_list": []
    },
    "description": ""
  },
  "api_version": "3.0",
  "metadata": {
    "last_update_time": "1672150186678421",
    "kind": "app_task",
    "uuid": "64f9234d-120e-464d-9746-71ca9f88dd1c",
    "owner_reference": {
      "kind": "user",
      "uuid": "f770294b-960c-5b8d-9e5b-1441b339aff7",
      "name": "alain.veuve@emeagso.lab"
    },
    "spec_version": 0,
    "creation_time": "1672150186678421",
    "name": "CommvaultBackupGetVMGroups"
  }
}
